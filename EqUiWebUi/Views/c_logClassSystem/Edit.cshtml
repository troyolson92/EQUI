@model EqUiWebUi.Models.c_logClassSystem


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>c_logClassSystem</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.id)

            <div class="form-group">
                @Html.LabelFor(model => model.c_datasource_id, "c_datasource_id", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("c_datasource_id", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.c_datasource_id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SelectStatement, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="panel" style="border:ridge">
                        <textarea id="SelectStatement" name="controllimitSqlStatement">@Model.SelectStatement</textarea>
                    </div>
                    @Html.ValidationMessageFor(model => model.SelectStatement, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UpdateStatement, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="panel" style="border:ridge">
                        <textarea id="UpdateStatement" name="controllimitSqlStatement">@Model.UpdateStatement</textarea>
                    </div>
                    @Html.ValidationMessageFor(model => model.UpdateStatement, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RunRuleStatement, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="panel" style="border:ridge">
                        <textarea id="RunRuleStatement" name="controllimitSqlStatement">@Model.RunRuleStatement</textarea>
                    </div>
                    @Html.ValidationMessageFor(model => model.RunRuleStatement, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>



@section scripts{
    @*http://codemirror.net/doc/manual.html*@
    <script src="~/Scripts/Codemirror/codemirror.js"></script>
    <link href="~/Content/codemirror/codemirror.css" rel="stylesheet" />
    <link href="~/Content/codemirror/neat.css" rel="stylesheet" />
    <script src="~/Scripts/Codemirror/mode/sql.js"></script>

    <script>
        //for code mirror editor
        //SelectStatement
        var SelectStatementCodeMirror = CodeMirror.fromTextArea(document.getElementById("SelectStatement"), {
            lineNumbers: true,
            mode: "sql",
            theme: "neat"
        });
        //UpdateStatement
        var UpdateStatementCodeMirror = CodeMirror.fromTextArea(document.getElementById("UpdateStatement"), {
            lineNumbers: true,
            mode: "sql",
            theme: "neat"
        });
        //UpdateStatement
        var RunRuleStatementCodeMirror = CodeMirror.fromTextArea(document.getElementById("RunRuleStatement"), {
            lineNumbers: true,
            mode: "sql",
            theme: "neat"
        });

    </script>
}