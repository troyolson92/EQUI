@model IEnumerable<EqUiWebUi.Models.c_datasource>
@{
    ViewBag.Title = "Index c_datasource";
}
<p>
    @Html.ActionLink("Create New", "Create")
</p>
@Html.Grid(Model).Named("c_datasourceGrid").Build(columns =>
{
columns.Add(c => c.Id).Titled("id").InitialSort(GridSortOrder.Asc);
columns.Add(c => c.Name).Titled("Name");
columns.Add(c => c.Description).Titled("Description");
columns.Add(c => c._db_type).Titled("db_type");
columns.Add(c => c.isAlertSource).Titled("isAlertSource");
columns.Add(c => c)
                .Titled("")
                .Encoded(false)
                .RenderedAs(c => MyHtmlHelpers.IconActionLink(Url.Action("Edit", new { id = c.Id }), "fas fa-pencil-alt", "", "Edit this") + " | " +
                             MyHtmlHelpers.IconActionLink(Url.Action("Delete", new { id = c.Id }), "fas fa-trash-alt", "", "Delete this") + " | " +
                             MyHtmlHelpers.IconActionLink(Url.Action("RunDbTest", new {id = c.Id, ChangePassword = false }), "fas fa-stethoscope", "", "check connection", classes: "JQresultTriggerBtn") + " | " +
                             MyHtmlHelpers.IconActionLink(Url.Action("RunDbTest", new {id = c.Id, ChangePassword = true }), "fas fa-key", "", "change password (rotate list)", classes: "JQresultTriggerBtn")
                    ).Filterable(false);
}).Filterable().Sortable().Pageable(pager =>
{
    pager.RowsPerPage = 30;
    pager.PageSizes = new Dictionary<Int32, String> { { 0, "All" }, { 20, "20" }, { 40, "40" }, { 80, "80" }, { 100, "100" } };
    pager.ShowPageSizes = true;
}).Empty("Did not find anything").Css("table-hover")

<hr />
<p>@MyHtmlHelpers.IconActionLink("/c_datasource/RunDbTest", "fas fa-stethoscope", "Run all database tests", "Test all databases in equi.c_datasources (login/select system date)", classes: "JQresultTriggerBtn")</p>


@section scripts{
    <script>
        //full with screen
        $("#allcontent").removeClass("body-content");
        $("#allcontent").removeClass("container");
    </script>
}
