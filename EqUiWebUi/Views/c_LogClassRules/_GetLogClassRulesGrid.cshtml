@model IQueryable<EqUiWebUi.Models.c_LogClassRules>

@Html.Grid(Model).Named("c_LogClassRulesGrid").Build(columns =>
{
    columns.Add(c => c.id).Titled("id").InitialSort(GridSortOrder.Asc);
    columns.Add(c => c.c_logClassSystem.Name).Titled("System");
    columns.Add(c => c.c_Classification.Classification).Titled("Class");
    columns.Add(c => c.c_Subgroup.Subgroup).Titled("Subgroup");
    columns.Add(c => c.I_comment).Titled("Comment");
    columns.Add(c => c.coderangeStart).Titled("coderangeStart");
    columns.Add(c => c.coderangeEnd).Titled("coderangeEnd");
    columns.Add(c => c.textSearch).Titled("textSearch");
    columns.Add(c => c)
                    .Titled("")
                    .Encoded(false)
                .RenderedAs(c => MyHtmlHelpers.IconActionLink(Url.Action("Edit", new { id = c.id}), "fas fa-pencil-alt", "", "Edit this rule", classes: "OpenNewWindow") + " | " +
                                 MyHtmlHelpers.IconActionLink(Url.Action("Delete", new { id = c.id }), "fas fa-trash-alt", "", "Delete this rule", classes: "OpenNewWindow")
                    ).Filterable(false);
}).Filterable().Sortable().Pageable(pager =>
{
    pager.RowsPerPage = 10;
}).Empty("Did not find anything").Css("table-hover")


<script>
    //subscribe to click event (launch external window)
    initUrlNewWindow();
</script>