@model IEnumerable<EqUiWebUi.Models.TipMonitor>

@*set title*@
@{
    ViewBag.Title = "Tipwear";
}

<script src="~/Scripts/jquery-3.2.1.min.js"></script>

@*scrip for blinking a row based on there value.*@
<script type="text/javascript">
    $(document).ready(function () {
        $(function () {
            setInterval(flashRow, 750);
        });
        var bFlip = new Boolean(false);
        function flashRow() {
            bFlip = !bFlip;
            $('tbody > tr').each(function (index) {
                @*blink for slowspeed*@
                if ($(this).children('td:nth-child(5)').text() > 40) {
                    if (bFlip) {
                        $(this).children('td').css("background-color", "#f21a1a");
                    } else {
                        $(this).children('td').css("background-color", "#ffffff");
                    }
                }
            });
        }
    });
</script>

@*scrip for playing sound based on row value.*@
@*http://soundbible.com/grab.php?id=1252&type=mp3*@
@*http://soundbible.com/grab.php?id=1377&type=mp3*@
<script type="text/javascript">
    $(document).ready(function () {
        var bNeedToPlay = new Boolean(false);
        var sound = new Audio(src = "http://soundbible.com/grab.php?id=1377&type=mp3");

        $(function () {
            setInterval(CheckSound, 1000 * 60);
            CheckSound();
        });

        function CheckSound() {
            bNeedToPlay = false;
            $('#gridMapping > tbody > tr').each(function (index) {
                if ($(this).children('td:nth-child(5)').text() > 30) {
                    bNeedToPlay = true;
                }
            });
            if (bNeedToPlay) {
                sound.play();
            }
        }
    });
</script>

@*function that calls server ever x time if there is new data*@
<script type="text/javascript">
    $(document).ready(function () {
        $(function () {
            //check every 5 seconds
            setInterval(CheckForData, 1000 * 5 );
        });
        //get last data timestamp from model
        var Datatimestamp = '@Html.Raw(ViewBag.DataTimestamp)';
        console.log(Datatimestamp);
        //interlock for ajax request
        var bInterlock = new Boolean();
        bInterlock = false;

        function CheckForData() {
            if (bInterlock) {
                return;
            } else {
                bInterlock = true;
            }
                    $.ajax({
                        async: true,
                        type: 'GET',
                        url: '@Url.Action("TipwearCheckNewData")',
                        dataType: 'json',
                        data: { dataTimestamp: Datatimestamp },

                        success: function (response) {
                            bInterlock = false;
                            //succes = reload needed
                            window.location.reload();
                        },

                        error: function (ex) {
                            bInterlock = false;
                            //error = no reload
                        }
            });

        }
    });
</script>

@*main grid*@
<div class="code-cut">
    @Html.Grid(Model).Named("DataGrid").Build(columns =>
{
    columns.Add(c => c.Robot).Titled("Robot").Filterable(true);
    columns.Add(c => c.Date_Time).Titled("Laaste keer gefreest").Formatted("{0:dd-MM-yyyy hh:mm}");
    columns.Add(c => c.nDress).Titled("Aantal keer gefreest");
    columns.Add(c => c.WearRatio).Titled("%WearRatio");
   // columns.Add(c => c.nWelds).Titled("nWelds");
    columns.Add(c => c.pWear).Titled("%wear");
    columns.Add(c => c.nRspots).Titled("remainingSpots");
    columns.Add(c => c.nRcars).Titled("remainingCars");
    columns.Add(c => c.LocationTree)
    .Titled("Info")
    .Encoded(false)
    .Filterable(true)
    .RenderedAs(o => Html.ActionLink("INFO", "_Moreinfo")
    );

}).Sortable().Pageable(pager =>
    {
    pager.RowsPerPage = 20;
    }).Empty("No data found")
</div>

@*footer modal with filter and gohome*@
<div class="modal-content">
    <div class="dropdown">
        <button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown">
            Set a location filter
            <span class="caret"></span>
        </button>
        <ul class="dropdown-menu">
            <li><a href="/Gadata/TipstatusWebgrid">ClearFilter</a></li>
            <li><a href="/Gadata/TipstatusWebgrid?DataGrid-LocationTree-Contains=GA4">GA4</a></li>
            <li><a href="/Gadata/TipstatusWebgrid?DataGrid-LocationTree-Contains=A LIJN 33">-FLOOR</a></li>
            <li><a href="/Gadata/TipstatusWebgrid?DataGrid-LocationTree-Contains=A LIJN 334">--FF-334</a></li>
            <li><a href="/Gadata/TipstatusWebgrid?DataGrid-LocationTree-Contains=A LIJN 331">--FS-331</a></li>
            <li><a href="/Gadata/TipstatusWebgrid?DataGrid-LocationTree-Contains=A LIJN 336">--RF-336</a></li>
            <li><a href="/Gadata/TipstatusWebgrid?DataGrid-LocationTree-Contains=A LIJN 338">--MAR-338</a></li>
            <li><a href="/Gadata/TipstatusWebgrid?DataGrid-LocationTree-Contains=A LIJN 339">--WBL-339</a></li>
            <li><a href="/Gadata/TipstatusWebgrid?DataGrid-LocationTree-Contains=A LIJN 35">-SIDES</a></li>
        </ul>

        <a href="~/" class="btn btn-primary">goHome &raquo;</a>
        Last data push: '@Html.Raw(ViewBag.DataTimestamp)'
    </div>
</div>

