@model IEnumerable<EqUiWebUi.Models.Supervisie>

@*set title*@
@{
    ViewBag.Title = "Supervisie";
}

<div>
    <p></p>
    <p></p>
    <div>
        <div>
            @Html.Grid(Model).Named("DataGrid").Build(columns =>
                         {
                             columns.Add(c => c.Location).Titled("Location").Filterable(true);
                             columns.Add(c => c.logtext).Titled("Logtext");
                             columns.Add(c => c.DT).Titled("DT");
                             columns.Add(c => c.time).Titled("time");
                             columns.Add(c => c.Classification).Titled("Class");
                             columns.Add(c => c.Subgroup).Titled("Subgroup");
                             columns.Add(c => c.Logtype).Titled("LogType").Filterable(true);
                             columns.Add(c => c.LocationTree)
                             .Titled("Info")
                             .Encoded(false)
                             .Filterable(true)
                             .RenderedAs(o => Html.ActionLink("INFO", "_Moreinfo",
                                new
                                {
                                    location = o.Location,
                                    errornum = o.Logcode,
                                    refid = o.refId,
                                    logtype = o.Logtype,
                                    logtext = o.logtext
                                },
                                  new { @class = "modal-link" }
                                  )
                             );
                         }).Sortable().Pageable(pager =>
                             {
                                 pager.RowsPerPage = 20;
                             }).Empty("No data found")
        </div>

        <div class="panel-footer">
            @MyFilters.LocationDropdown("/Gadata/SupervisieWebgrid", "")
            <p style="float:right"> Last data push: '@Html.Raw(ViewBag.DataTimestamp)'</p>
        </div>
    </div>
</div>


@*render popuover modal*@
<div>
    @MyModals.tableHelperModal("tableModal");
</div>

@*info modal java script*@
<script type="text/javascript">
    var bModalOpen = false;
    //this script show modal each time when you click on the link:
    $(function () {
        $(".modal-link").click(function (event) {
            event.preventDefault();
            bModalOpen = true;
            $('#myModal').modal({ remote: $(this).attr("href") });
        });

        $('#myModal').on('hidden.bs.modal', function () {
            // reload page
            window.location.reload();
        })
    })
</script>


<script type="text/javascript">
    $(document).ready(function () {
        //set colors for grid
        tableFormatLogtype(7);
        //enable blinking
        tableFormatBlink(7, 6);
    });
</script>


@*function that calls server ever x time if there is new data*@
<script type="text/javascript">
    $(document).ready(function () {
        $(function () {
            //check every 5 seconds
            setInterval(CheckForData, 1000 * 5 );
        });
        //get last data timestamp from model
        var Datatimestamp = '@Html.Raw(ViewBag.DataTimestamp)';
        console.log(Datatimestamp);
        //interlock for ajax request
        var bInterlock = new Boolean();
        bInterlock = false;

        function CheckForData() {
            if (bInterlock) {
                return;
            } else {
                bInterlock = true;
            }
                    $.ajax({
                        async: true,
                        type: 'GET',
                        url: '@Url.Action("SupervisiecheckNewData")',
                        dataType: 'json',
                        data: { dataTimestamp: Datatimestamp },

                        success: function (response) {
                            bInterlock = false;
                            //succes = reload needed
                            if (!bModalOpen) { //only reaload when modal is not open
                                window.location.reload();
                            }
                        },

                        error: function (ex) {
                            bInterlock = false;
                            //error = no reload
                        }
            });

        }
    });
</script>