@model IQueryable<EqUiWebUi.Models.c_housekeeping>

@{
    ViewBag.Title = "Index c_housekeeping";
}

<h2>Index c_housekeeping</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@Html.Grid(Model).Named("c_housekeepingGrid").Build(columns =>
{
    columns.Add(c => c.id).Titled("id").InitialSort(GridSortOrder.Asc);
    columns.Add(c => c.c_schedule.name).Titled("scheduleName");
    columns.Add(c => c.Name).Titled("NameSimple").Css("editTestCollumSimple"); //simple sample
    columns.Add(c => c.Name).Titled("NameFull").Css("editTestCollumFull"); //full code sample
    columns.Add(c => c.SchemaName).Titled("SchemaName");
    columns.Add(c => c.TableName).Titled("TableName");
    columns.Add(c => c.nDaysKeepHistory).Titled("KeepDays");
    columns.Add(c => c)
                    .Titled("")
                    .Encoded(false)
                    .RenderedAs(c => MyFilters.IconActionLink(Url.Action("Edit", new { id = c.id }), "fas fa-pencil-alt", "", "Edit this") + " | " +
                                 MyFilters.IconActionLink(Url.Action("Delete", new { id = c.id }), "fas fa-trash-alt", "", "Delete this")
                    ).Filterable(false);
}).Filterable().Sortable().Pageable(pager =>
{
    pager.RowsPerPage = 10;
}).Empty("Did not find anything").Css("table-hover")



@section scripts{
    <script src="~/node_modules/jquery-jeditable/dist/jquery.jeditable.min.js"></script>

    <script>
        //full with screen
        $("#allcontent").removeClass("body-content");
        $("#allcontent").removeClass("container");

        //subscribe to row clicked events
        $('[data-name="c_housekeepingGrid"]').mvcgrid({
            rowClicked: function (row, data, e) {
                //if row already has this clase close the modal
                if ($(row).hasClass("bg-info")) {
                    $("#placeholder").remove();
                    $(row).removeClass("bg-info");
                    return;
                }
                //clear selected rows for this table
                $('tr').removeClass('bg-info'); //THIS IS WRONG
                $(row).addClass("bg-info");
                $("#placeholder").remove(); //clear placeholder is exists
                //add new placeholder afhter selected row
                $(row).after('<tr id="placeholder"><td colspan="1000"><div class="card border-info"><div class="card-body" id ="placeholderPartial"></div></div></td></tr>');
                //animation
                $("#placeholderPartial").html("<i class='fas fa-spinner fa-spin fa-2x'></i>");
                //load url in placeholder
                var url = "@Url.Action("_L_housekeeping")?id=" + data["id"];
                $("#placeholderPartial").load(url);
            }
        });

        //test with Jeditable for in place table editable
        //https://github.com/NicolasCARPi/jquery_jeditable/
        //Sample code 
        https://jeditable.elabftw.net/

        //simple sample basic
        $('.editTestCollumSimple').editable('@Url.Action("UpdateLabel")');

        //full sample
        function submitdata(revert, settings, submitdata) {
            console.log("Revert text: " + revert);
            console.log(settings);
            console.log("User submitted text: " + submitdata.value);
        }


        $('.editTestCollumFull').editable("save.php", {
            indicator: "<i class='far fa-sad-tear'></i>",
            type: "text",
            // only limit to three letters example
            //pattern: "[A-Za-z]{3}",
            onedit: function () { console.log('If I return false edition will be canceled'); return true; },
            before: function () { console.log('Triggered before form appears') },
            callback: function (result, settings, submitdata) {
                console.log('Triggered after submit');
                console.log('Result: ' + result);
                console.log('Settings.width: ' + settings.width);
                console.log('Submitdata: ' + submitdata.pwet);
            },
            cancel: 'Cancel',
            cssclass: 'custom-class',
            cancelcssclass: 'btn btn-danger',
            submitcssclass: 'btn btn-success',
            maxlength: 200,
            // select all text
            select: true,
            label: 'This is a label',
            onreset: function () { console.log('Triggered before reset') },
            onsubmit: function () { console.log('Triggered before submit') },
            showfn: function (elem) { elem.fadeIn('slow') },
            submit: 'Save',
            submitdata: submitdata,
            /* submitdata as a function example
            submitdata : function(revert, settings, submitdata) {
                console.log("Revert text: " + revert);
                console.log(settings);
                console.log("User submitted text: " + submitdata.value);
            },
            */
            tooltip: "Click to edit...",
            width: 160
        });



    </script>
}
