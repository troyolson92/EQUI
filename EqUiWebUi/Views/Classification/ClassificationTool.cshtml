@model EqUiWebUi.Models.c_LogClassRules

@{
    ViewBag.Title = "ClassificationTools";
}

<div class="">
    <div class="card-header bg-dark">
        <h5 class="card-title text-white">
            ClassificationTool
        </h5>
    </div>
    <div class="card-body">
        <div class="form-horizontal">
            <div class="card">
                <div class="card-header bg-primary">
                    <h5 class="card-title text-white">
                        Search in log lib
                        <span class="clickable float-right"><i class="fas fa-chevron-circle-up fa-1"></i></span>
                    </h5>
                </div>
                <div class="card-body">

                    <div class="form-group">
                        @Html.LabelFor(model => model.c_logClassSystem_id, "c_logClassSystem_id", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-4">
                            @Html.DropDownList("c_logClassSystem_id", null, htmlAttributes: new { @class = "form-control" }, optionLabel: "--Select a system--")
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-xl-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.coderangeStart, htmlAttributes: new { @class = "control-label col-md-5" })
                                <div class="col-md-7">
                                    @Html.EditorFor(model => model.coderangeStart, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                        </div>
                        <div class="col-xl-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.coderangeEnd, htmlAttributes: new { @class = "control-label col-md-5" })
                                <div class="col-md-7">
                                    @Html.EditorFor(model => model.coderangeEnd, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                        </div>
                        <div class="col-xl-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.textSearch, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.textSearch, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-8 pull-right">
                            <button class="btn btn-info" id="btnSearch">Search</button>
                        </div>
                    </div>

                </div>
            </div>
        </div>

        <hr />

        <div class="card">
            <div class="card-header bg-danger">
                <h5 class="card-title text-white">
                    Power functions (Search by Class and Subgroup and set in bulk) DANGEROUS
                    <span class="clickable float-right"><i class="fas fa-chevron-circle-up fa-rotate-180 fa-1"></i></span>
                </h5>
            </div>
            <div class="card-body" style="display:none">
                <div class="row">
                    <div class="col-xl-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.c_ClassificationId, "c_ClassificationId", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownList("c_ClassificationId", null, htmlAttributes: new { @class = "form-control c_ClassificationId" }, optionLabel: "--Select class--")
                            </div>
                        </div>
                    </div>
                    <div class="col-xl-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.c_SubgroupId, "c_SubgroupId", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownList("c_SubgroupId", null, htmlAttributes: new { @class = "form-control c_SubgroupId" }, optionLabel: "--Select subgroup--")
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xl-8">
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <button class="btn btn-info" id="btnFindAllinGroup" data-toggle="tooltip" data-placement="right" title="Search for all logs in group">Search logs in group</button>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <button class="btn btn-info" id="btnGetRules" data-toggle="tooltip" data-placement="right" title="Search for all logs in group">Search rules in group</button>
                            </div>
                        </div>
                    </div>
                    <div class="col-xl-2">
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <button class="btn btn-success" id="btnSetALLClassSubgroup" data-toggle="tooltip" data-placement="right" title=" Set all that matches current search result">Set</button>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <button class="btn btn-danger" id="btnClearALLClassSubgroup" data-toggle="tooltip" data-placement="right" title="CLEAR all that matches current search result">Clear</button>
                            </div>
                        </div>
                    </div>
                    <div class="col-xl-2">
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <button class="btn btn-danger" id="btnMakerule" data-toggle="tooltip" data-placement="right" title="Make a rule based on current settings">MakeRule</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <hr />

        <div class="card">
            <div class="card-header bg-primary">
                <h5 class="card-title text-white">
                    Result
                    <i class="fas fa-sync-alt clickable" id="BtnRefreshResult"></i>
                    <span class="clickable float-right"><i class="fas fa-chevron-circle-up fa-1"></i></span>
                </h5>
            </div>
            <div class="card-body">
                <div id="dummyLogClassResultGrid" class="mvc-grid"></div>
            </div>
        </div>

        <hr />

        <div class="card">
            <div class="card-header bg-primary">
                <h5 class="card-title text-white">
                    Classifcation rules
                    <i class="fas fa-sync-alt clickable" id="BtnRefreshRules"></i>
                    <span class="clickable float-right"><i class="fas fa-chevron-circle-up fa-1"></i></span>
                </h5>
            </div>
            <div class="card-body">
                <div id="c_LogClassRulesGrid" class="mvc-grid"></div>
            </div>
        </div>

        <hr />

    </div>
</div>

@*Hidden html for loading into Result grid*@
<div id="ResultGridOptions" class="d-none">
    <div>
        <div class="row">
            <div class="col-xl-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.c_ClassificationId, "c_ClassificationId", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownList("c_ClassificationId", null, htmlAttributes: new { @class = "form-control c_ClassificationId" }, optionLabel: "--Select class--")
                    </div>
                </div>
            </div>
            <div class="col-xl-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.c_SubgroupId, "c_SubgroupId", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownList("c_SubgroupId", null, htmlAttributes: new { @class = "form-control c_SubgroupId" }, optionLabel: "--Select subgroup--")
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-xl-6">
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button class="btn btn-success" id="btnSetSingleClassSubgroup">Set</button>
                        Set single row
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button class="btn btn-danger" id="btnClearSingleClassSubgroup">Clear</button>
                        Clear single row
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@*Hidden html for loading into Rules grid*@
<div id="RuleGridOptions" class="d-none">
    <div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button class="btn btn-warning" id="btnRunRule">RunRule</button>
                Run rule (leave manual set)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button class="btn btn-danger" id="btnRuleRuleOverride">RuleRule</button>
                Run rule (override manual set)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button class="btn btn-danger" id="btnRuleClear">ClearRule</button>
                Clear records with this rule
            </div>
        </div>

    </div>
</div>


@section scripts{
    <!--ClassificationTool script-->
    <script>
    //full with screen
        $("#allcontent").removeClass("body-content");
        $("#allcontent").removeClass("container");

    //function to reload search grid
        function GetGridSearch(bSearchByClassification) {
            $("#dummyLogClassResultGrid").html("<i class='fas fa-spinner fa-spin fa-2x'></i>");
            $("#dummyLogClassResultGrid").mvcgrid({
                sourceUrl: '@Url.Action("_logSearchResult")',
                data: {
                    c_logClassSystem_id: $('#c_logClassSystem_id').val(),
                    coderangeStart: $('#coderangeStart').val(),
                    coderangeEnd: $('#coderangeEnd').val(),
                    textSearch: $('#textSearch').val(),
                    c_ClassificationId: $('#c_ClassificationId').val(),
                    c_SubgroupId: $('#c_SubgroupId').val(),
                    SearchByClassification: bSearchByClassification

                },
                requestType: 'get',
                reload: true,
                rowClicked: function (row, data, e) {
                //if row already has this clase close the modal
                if ($(row).hasClass("bg-info")) {
                    $("#placeholder1").remove();
                    $(row).removeClass("bg-info");
                    return;
                }
                //clear selected rows for this table
                $('tr').removeClass('bg-info'); //THIS IS WRONG
                $(row).addClass("bg-info");
                $("#placeholder1").remove(); //clear placeholder is exists
                //add new placeholder afhter selected row
                $(row).after('<tr id="placeholder1"><td colspan="1000"><div class=""><div class="" id ="placeholderPartial1"></div></div></td></tr>');
                //load partial into div
                $("#placeholderPartial1").html($("#ResultGridOptions").html());
                //listen toclick events
                    //set a single Row
                    $('#btnSetSingleClassSubgroup').click(function () {
                        SetClass(data.id, false);
                    });
                    //Clear a single Row
                    $('#btnClearSingleClassSubgroup').click(function () {
                        SetClass(data.id, true);
                    });
                    //these dropdrown have multible instances on the same page. this keeps em allinged
                    $('.c_ClassificationId').on('change', function () {
                        $(".c_ClassificationId").val($(this).val());
                    });
                    $('.c_SubgroupId').on('change', function () {
                        $(".c_SubgroupId").val($(this).val());
                    });
                //
                },
                reloadFailed: function (result) {
                    $('#dummyLogClassResultGrid').html("Error while loading!!!");
                    console.log(result);
                    $.toaster({ title: 'Grid', priority: 'danger', message: result.statusText });
                }
            });
        }

    //get logclassRulesGrid
        function GetRules() {
            $("#c_LogClassRulesGrid").html("<i class='fas fa-spinner fa-spin fa-2x'></i>");
            $("#c_LogClassRulesGrid").mvcgrid({
                sourceUrl: '@Url.Action("_GetLogClassRulesGrid", "c_logClassRules")',
                data: {
                    c_ClassificationId: $('#c_ClassificationId').val(),
                    c_SubgroupId: $('#c_SubgroupId').val(),
                    c_logClassSystem_id: $('#c_logClassSystem_id').val()
                },
                requestType: 'get',
                reload: true,
                rowClicked: function (row, data, e) {
                    //if row already has this clase close the modal
                    if ($(row).hasClass("bg-info")) {
                        $("#placeholder2").remove();
                        $(row).removeClass("bg-info");
                        return;
                    }
                    //clear selected rows for this table
                    $('tr').removeClass('bg-info'); //THIS IS WRONG
                    $(row).addClass("bg-info");
                    $("#placeholder2").remove(); //clear placeholder is exists
                    //add new placeholder afhter selected row
                    $(row).after('<tr id="placeholder2"><td colspan="1000"><div class=""><div class="" id ="placeholderPartial2"></div></div></td></tr>');
                    //load partial into div
                    $("#placeholderPartial2").html($("#RuleGridOptions").html());
                    //
                    //listen toclick events
                        //run rule
                        $('#btnRunRule').click(function () {
                            RunRule(data.id, false, false);
                        });
                        //run rule with override
                        $('#btnRuleRuleOverride').click(function () {
                            RunRule(data.id, true, false);
                        });
                        //clear rule
                        $('#btnRuleClear').click(function () {
                            RunRule(data.id, false, true);
                        });
                },
                reloadFailed: function (result) {
                    $('#c_LogClassRulesGrid').html("Error while loading!!!");
                    console.log(result);
                    $.toaster({ title: 'Grid', priority: 'danger', message: result.statusText });
                }
            });
        }

    //function for setting and clearing of classifcation (manual)
        function SetClass(rowID, Clear) {
            $.toaster({ title: 'SetClass', priority: 'info', message: 'Fired: SetClass' });
            $.ajax({
                type: "GET",
                url: '@Url.Action("SetClass")',
                data: {
                    c_logClassSystem_id: $('#c_logClassSystem_id').val(),
                    coderangeStart: $('#coderangeStart').val(),
                    coderangeEnd: $('#coderangeEnd').val(),
                    textSearch: $('#textSearch').val(),
                    c_ClassificationId: $('#c_ClassificationId').val(),
                    c_SubgroupId: $('#c_SubgroupId').val(),
                    RowID: rowID,
                    Clear: Clear
                },
                success: function (result) {
                    $.toaster({ title: 'SetClass', priority: 'success', message: result.Msg });
                    //reload the grid
                    GetGridSearch(false);
                },
                error: function (result) {
                    console.log(result);
                    $.toaster({ title: 'SetClass', priority: 'danger', message: result.statusText});
                    //reload the grid
                    GetGridSearch(false);
                }
            });
        }

     //function for running rules
        function RunRule(ruleID, overrideManualSet, Clear) {
            $.toaster({ title: 'RunRule', priority: 'info', message: 'Fired: RunRule' });
            $.ajax({
                type: "GET",
                url: '@Url.Action("RunRule")',
                data: {
                    c_logClassSystem_id: $('#c_logClassSystem_id').val(),
                    id: ruleID,
                    overrideManualSet: overrideManualSet,
                    Clear: Clear
                },
                success: function (result) {
                    $.toaster({ title: 'RunRule', priority: 'success', message: result.Msg });
                    //reload the grid
                    GetGridSearch(false);
                },
                error: function (result) {
                    console.log(result);
                    $.toaster({ title: 'SetClass', priority: 'danger', message: result.statusText });
                    //reload the grid
                    GetGridSearch(false);
                }
            });
        }

    //function for making rules
    function MakeRule() {
        $.toaster({ title: 'MakeRule', priority: 'info', message: 'Fired: MakeRule' });
        $.ajax({
            type: "POST",
            url: '@Url.Action("RemoteCreate", "c_LogClassRules")',
            data: {
                c_logClassSystem_id: $('#c_logClassSystem_id').val(),
                coderangeStart: $('#coderangeStart').val(),
                coderangeEnd: $('#coderangeEnd').val(),
                textSearch: $('#textSearch').val(),
                c_ClassificationId: $('#c_ClassificationId').val(),
                c_SubgroupId: $('#c_SubgroupId').val()
            },
            success: function (result) {
                $.toaster({ title: 'MakeRule', priority: 'success', message: result.Msg });
                //reload the grid
                GetRules();
            },
            error: function (result) {
                console.log(result);
                $.toaster({ title: 'SetClass', priority: 'danger', message: result.statusText });
                //reload the grid
                GetRules();
            }
        });
    }

//listen toclick events
    //handle search. (by range and logtext)
    $("#btnSearch").click(function () {
        GetGridSearch(false);
    });
    //handle search (all in selecte subgroup and class)
    $('#btnFindAllinGroup').click(function () {
        GetGridSearch(true);
    });
    //hanlde get rules
    $('#btnGetRules').click(function () {
        GetRules();
    });
    //set a single Row
    $('#btnSetALLClassSubgroup').click(function () {
        SetClass(0, false);
    });
    //Clear a single Row
    $('#btnClearALLClassSubgroup').click(function () {
        SetClass(0, true);
    });
    //refresh grids when system changes
    $('#c_logClassSystem_id').on('change', function () {
        //reload the grids
        GetGridSearch(false);
        GetRules();
    });
    //refresh logclassrules grids
    $('#BtnRefreshRules').click(function () {
        GetRules();
    });
    //refresh main grids
    $('#BtnRefreshResult').click(function () {
        GetGridSearch(false);
    });
    //make a new rule
    $('#btnMakerule').click(function () {
        console.log('hit');
        MakeRule();
    });
//at end of script run the grids (init)
    //GetGridSearch(false);
    //GetRules();
    </script>
}
