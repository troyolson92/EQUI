@model EqUiWebUi.Models.LogInfo
<div id="ChartID@(Model.refid)">

    <div class="card">
        <div class="card-header bg-light">
            <h6 class="card-title">
                <a class="fas fa-sync-alt text-black-50 ErrorTrentChartRefresh" href="#"></a>
                Trend for
                location: <strong>@Model.location.Trim()</strong>
                logcode: <strong>@Model.errornum</strong>
                logtext: <strong>@Model.logtext.Trim()</strong>
                <a class="fas fa-wrench text-black-50 ErrorTrentChartOptionsPopoverChart" href="#" data-toggle="popover" data-placement="bottom"></a>
                <a class="far fa-calendar-alt text-black-50 ErrorTrentChartDatepicker" href="#"></a>
                <span class="clickable float-right text-black-50"><i class="fas fa-chevron-circle-up fa-1"></i></span>
            </h6>
        </div>

        <div class="card-body">
            <div class="gaphContainer" style="position:relative"></div>
        </div>
    </div>

    @*popover content*@
    <div class="d-none ErrorTrentChartOptionsPopoverChartContent">
        <div class="panel panel-body">
            <div class="row">
                <div class=" col-3">
                    Grouping
                </div>

                <div class="col-9">
                    <div class="btn-group" id="btnGrouping" role="group" data-toggle="tooltip" data-placement="bottom" title="Set how the graph groups the data">
                        <button type="button" class="btn  btn-sm btn-secondary active" id="btnGroupingAuto">auto</button>
                        <button type="button" class="btn  btn-sm btn-secondary" id="btnGroupingHour">hour</button>
                        <button type="button" class="btn  btn-sm btn-secondary" id="btnGroupingDay">day</button>
                        <button type="button" class="btn  btn-sm btn-secondary" id="btnGroupingWeek">week</button>
                        <button type="button" class="btn  btn-sm btn-secondary" id="btnGroupingMonth">month</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @*hidden field*@
    <input type="hidden" name="ErrorTrentChartEndDate" value="">
    <input type="hidden" name="ErrorTrentCharttStartDate" value="">
    <input type="hidden" name="ErrorTrentChartGroupmode" value="">

</div>

<!--TendChartScripts-->
<script src="~/Scripts/d3/d3.js"></script>
<script src="~/Scripts/d3/Chart.bundle.js"></script>
<script>
//Self-Executing Anonymous Functions because this partial might be rendered multiple times on same page.
    (function () {
        //global vars
        var ErrorTrendChart;
        $('#ChartID@(Model.refid)').find("input[name=ErrorTrentChartEndDate]").val(moment().subtract(29, 'days'));
        $('#ChartID@(Model.refid)').find("input[name=ErrorTrentCharttStartDate]").val(moment());
        $('#ChartID@(Model.refid)').find("input[name=ErrorTrentChartGroupmode]").val(0);

       //setting up datetimePicker
        $('#ChartID@(Model.refid)').find('.ErrorTrentChartDatepicker').daterangepicker({
            "showWeekNumbers": true,
            "showISOWeekNumbers": true,
            "ranges": {
                'Last 48 Hours': [moment().subtract(2, 'days'), moment()],
                'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                'Last 100 Days': [moment().subtract(100, 'days'), moment()],
                'Last Year': [moment().subtract(365, 'days'), moment()],
                'Last 5Year': [moment().subtract(365 * 5, 'days'), moment()]
            },
            "startDate": moment($('#ChartID@(Model.refid)').find("input[name=ErrorTrentCharttStartDate]").val()),
            "endDate": moment($('#ChartID@(Model.refid)').find("input[name=ErrorTrentChartEndDate]").val())

        }, function (end, start, label) {
            console.log("New date range selected: " + start.format('YYYY-MM-DD') + " to " + end.format('YYYY-MM-DD') + " (predefined range: " + label + ")");
            $('#ChartID@(Model.refid)').find("input[name=ErrorTrentChartEndDate]").val(end);
            $('#ChartID@(Model.refid)').find("input[name=ErrorTrentCharttStartDate]").val(start);
            getChartData();
        });

        //enable popover for settings.
        $('#ChartID@(Model.refid)').find(".ErrorTrentChartOptionsPopoverChart").popover({
            html: true,
            content: function () {
                return $('#ChartID@(Model.refid)').find('.ErrorTrentChartOptionsPopoverChartContent').html();
            }
        });

        //get chart data
        function getChartData() {
            $('#ChartID@(Model.refid)').find('.gaphContainer').html("<div class='card-body'><i class='fa fa-spinner fa-pulse fa-2x fa-fw'></i><span class='sr-only'></span>Loading....</div>");
            //make ajax request
            $.ajax({
                type: 'GET',
                url: "/chart/_getData",
                data: {
                    "location" : "@Model.location",
                    "errornum" : "@Model.errornum",
                    "logtext" : "@Model.logtext.Replace("\n", " ").Replace("\r", " ").Replace("\t", " ")",
                    "logtype" : "@Model.logtype",
                    "refId": @Model.refid,
                    "startDate": moment($('#ChartID@(Model.refid)').find("input[name=ErrorTrentCharttStartDate]").val()).toISOString(),
                    "endDate": moment($('#ChartID@(Model.refid)').find("input[name=ErrorTrentChartEndDate]").val()).toISOString(),
                    "grouptType" : $('#ChartID@(Model.refid)').find("input[name=ErrorTrentChartGroupmode]").val()
                },
                success: function (result) {
                    console && console.log("request tend chart data succeeded");
                    buildchart(result, "TrendchartName");
                },
                error: function (result) {
                    console && console.log("request trend chart data failed!!");
                    $('#ChartID@(Model.refid)').find('.gaphContainer').html($("#Error", result.responseText).html());
                },
                dataType: "json",
                contentType: "application/json",
                async: true
            });
        };

        //build the chart Calls when ajax request ends
        function buildchart(table, chartName) {
            var vLabels = new Array();
            var vData = new Array();

            for (var i = table.length - 1; i >= 0; i--) {
                vLabels.push(table[i].Label);
                vData.push(table[i].Count)
            }

            var config = {
                type: 'bar',
                data: {
                    labels: vLabels,
                    datasets: [{
                        yAxisID: 'A',
                        position: 'left',
                        label: "Count of fault",
                        backgroundColor: '#2F7CCA',
                        borderColor: '#2F7CCA',
                        data: vData,
                        fill: false,
                    }
                    ]
                },
                options: {
                    responsive: true,
                    legend: {
                        display: false //no legend
                    },
                    title: {
                        display: false, //display name off!
                        text: chartName
                    },
                    tooltips: {
                        mode: 'index',
                        intersect: false,
                    },
                    hover: {
                        mode: 'nearest',
                        intersect: true
                    },
                    scales: {
                        xAxes: [{
                            display: true,
                            scaleLabel: {
                                display: false, //x label off
                                labelString: '[Time]'
                            }
                        }],
                        yAxes: [{
                            display: true,
                            id: 'A',
                            ticks: {
                                beginAtZero: true
                            },
                            scaleLabel: {
                                display: true,
                                labelString: '[Count]'
                            }
                        }]
                    }
                }
            };
            //destroy chart if exists
            if (ErrorTrendChart) {
               ErrorTrendChart.destroy();
            }
            //clear the canvas just to be sure
            $('#ChartID@(Model.refid)').find(".graphCanvas").remove();
            //clear spinner.
            $('#ChartID@(Model.refid)').find('.gaphContainer').html("");
            //add the new canvas
            $('#ChartID@(Model.refid)').find('.gaphContainer').append('<canvas class="graphCanvas" height="70"></canvas>');
            //build the chart
            var ctx = $('#ChartID@(Model.refid)').find('.graphCanvas')[0].getContext("2d");
            ErrorTrendChart = new Chart(ctx, config);
        }

        //listen to refresh click event
        $('#ChartID@(Model.refid)').find('.ErrorTrentChartRefresh').click(function () {
            getChartData();
        });


        //setting up group mode events
        $(document).on("click", "#btnGroupingAuto", function () {
            $("#btnGrouping").find(".active").removeClass("active");
            $("#btnGroupingAuto").addClass("active");
            groupmode = 0;
            getChartData();
        });

        $(document).on("click", "#btnGroupingHour", function () {
            $("#btnGrouping").find(".active").removeClass("active");
            $("#btnGroupingHour").addClass("active");
            groupmode = 1;
            getChartData();
        });

        $(document).on("click", "#btnGroupingDay", function () {
            $("#btnGrouping").find(".active").removeClass("active");
            $("#btnGroupingDay").addClass("active");
            groupmode = 2;
            getChartData();
        });

        $(document).on("click", "#btnGroupingWeek", function () {
            $("#btnGrouping").find(".active").removeClass("active");
            $("#btnGroupingWeek").addClass("active");
            groupmode = 3;
            getChartData();
        });

        $(document).on("click", "#btnGroupingMonth", function () {
            $("#btnGrouping").find(".active").removeClass("active");
            $("#btnGroupingMonth").addClass("active");
            groupmode = 4;
            getChartData();
        });

        //init on doc loaded done
        $(document).ready(function () {
            getChartData();
        });
    })();
</script>

