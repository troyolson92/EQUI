@model EqUiWebUi.Models.LogInfo
<div class="panel panel-primary">
    <div class="panel-heading">
        <h4 class="panel-title">
            Trend for location: <strong>@Model.location.Trim()</strong> logcode: <strong>@Model.errornum</strong> logtext: <strong>@Model.logtext.Trim()</strong>
            <a class="glyphicon glyphicon-cog" href="#" data-toggle="popover" data-placement="bottom" id="ErrorTrentCharOptionsPopover"></a>
            <a class="glyphicon glyphicon-calendar" id="ErrorTrentCharDatepicker" href="#"></a>
        </h4>
        <span class="pull-right clickable"><i class="glyphicon glyphicon-chevron-up"></i></span>
    </div>

    <div class="panel-body" id="graphSpinner" style="position:relative">
        <div id="gaphContainer">
            <canvas id='graphCanvas'></canvas>
        </div>
    </div>
</div>

@*popover content*@
<div class="hidden" id="ErrorTrentCharOptionsPopoverContent">
    <div class="panel panel-body">
        <div class="row" style="color:#000000">
            <div class=" col-2">
                Groupmode
            </div>

            <div class="col-10">
                <div class="btn-group" id="btnGrouping" role="group" data-toggle="tooltip" data-placement="bottom" title="Set how the graph groups the data" >
                    <button type="button" class="btn  btn-sm btn-secondary active" id="btnGroupingAuto">auto</button>
                    <button type="button" class="btn  btn-sm btn-secondary" id="btnGroupingHour">hour</button>
                    <button type="button" class="btn  btn-sm btn-secondary" id="btnGroupingDay">day</button>
                    <button type="button" class="btn  btn-sm btn-secondary" id="btnGroupingWeek">week</button>
                    <button type="button" class="btn  btn-sm btn-secondary" id="btnGroupingMonth">month</button>
                </div>
            </div>
        </div>
    </div>
</div>


<script src="~/Scripts/d3/d3.js"></script>
<script src="~/Scripts/d3/Chart.bundle.js"></script>
<script>
    //global vars
    var groupmode = 0;
    var endDate = moment().subtract(29, 'days');
    var startDate = moment();
    var spinnerErrorTrent = new Spinner();
    var ErrorTrendChart;

    //enable popover for settings.
    $("#ErrorTrentCharOptionsPopover").popover({
        html: true,
        content: function () {
            return $('#ErrorTrentCharOptionsPopoverContent').html();
        },
    });

    //get chart data
    function getChartData(_location, _errornum, _logtekst, _logtype, _refId, _startDate, _endDate, _groupType) {
        //start a wait spinner
        spinnerErrorTrent.spin(document.getElementById('graphSpinner'));
        //make ajax request
        $.ajax({
            type: 'GET',
            url: "/chart/_getData" +
            "?location=" + _location
            + "&errornum=" + _errornum
            + "&logtekst=" + _logtekst
            + "&logtype=" + _logtype
            + "&refId=" + _refId
            + "&startDate=" + _startDate
            + "&endDate=" + _endDate
            + "&grouptType=" + _groupType,
          //  data: JSON.stringify(), this stringify cause us to fail on IOS WHY ?
            success: function (returnPayload) {
                console && console.log("request chart data succeeded");
                buildchart(returnPayload, "chartName");
                //hide spinner when completes
                spinnerErrorTrent.stop();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console && console.log("request chart data failed!!");
                $("#gaphContainer").html('<div>Request failed!!</div>');
                spinnerErrorTrent.stop();
            },
            dataType: "json",
            contentType: "application/json",
            processData: false,
            async: true
        });
    };

    //build the chart Calls when ajax request ends
    function buildchart(table, chartName) {
        var vLabels = new Array();
        var vData = new Array();

        for (var i = table.length - 1; i >= 0; i--) {
            vLabels.push(table[i].Label);
            vData.push(table[i].Count)
        }

        var config = {
            type: 'bar',
            data: {
                labels: vLabels,
                datasets: [{
                    yAxisID: 'A',
                    position: 'left',
                    label: "Count of fault",
                    backgroundColor: '#2F7CCA',
                    borderColor: '#2F7CCA',
                    data: vData,
                    fill: false,
                }
                ]
            },
            options: {
                responsive: true,
                legend: {
                    display: false //nolegend
                },
                title: {
                    display: false, //display name off!
                    text: chartName
                },
                tooltips: {
                    mode: 'index',
                    intersect: false,
                },
                hover: {
                    mode: 'nearest',
                    intersect: true
                },
                scales: {
                    xAxes: [{
                        display: true,
                        scaleLabel: {
                            display: false, //x label off
                            labelString: '[Time]'
                        }
                    }],
                    yAxes: [{
                        display: true,
                        id: 'A',
                        ticks: {
                            beginAtZero: true,
                            // steps: 10,
                            // stepValue: 5,
                            //max: 200,
                        },
                        scaleLabel: {
                            display: true,
                            labelString: '[Count]'
                        }
                    }]
                }
            }
        };
        //destroy chart if exists
        if (ErrorTrendChart) {
            ErrorTrendChart.destroy();
        }
        //clear the cancas just to be shure
        $("#graphCanvas").remove();
        //add the new canvas
        $("#gaphContainer").append('<canvas id="graphCanvas" height="70"></canvas>');
        //build the chart
        var ctx = document.getElementById("graphCanvas").getContext("2d");
        ErrorTrendChart = new Chart(ctx, config);
    }

    //refresh the chart
    function refreshChart() {
        getChartData("@Model.location", @Model.errornum, "@Model.logtext.Replace("\n"," ").Replace("\r", " ").Replace("\t", " ")", "@Model.logtype",@Model.refid, moment(startDate).toISOString(), moment(endDate).toISOString(), groupmode);
    };

    //setting up datetimePicker
    $('#ErrorTrentCharDatepicker').daterangepicker({
        "showWeekNumbers": true,
        "showISOWeekNumbers": true,
        "ranges": {
            'Last 48 Hours': [moment().subtract(2, 'days'), moment()],
            'Last 7 Days': [moment().subtract(6, 'days'), moment()],
            'Last 30 Days': [moment().subtract(29, 'days'), moment()],
            'Last 100 Days': [moment().subtract(100, 'days'), moment()],
            'Last Year': [moment().subtract(365, 'days'), moment()],
            'Last 5Year': [moment().subtract(365*5, 'days'), moment()]
        },
        "startDate": startDate,
        "endDate": endDate,

    }, function (end, start, label) {
        console.log("New date range selected: " + start.format('YYYY-MM-DD') + " to " + end.format('YYYY-MM-DD') + " (predefined range: " + label + ")");
        startDate = start;
        endDate = end;
        refreshChart();
        });


    //setting up groupmode events
    $(document).on("click", "#btnGroupingAuto", function () {
        $("#btnGrouping").find(".active").removeClass("active");
        $("#btnGroupingAuto").addClass("active");
        groupmode = 0;
        refreshChart();
    });


    $(document).on("click", "#btnGroupingHour", function () {
        $("#btnGrouping").find(".active").removeClass("active");
        $("#btnGroupingHour").addClass("active");
        groupmode = 1;
        refreshChart();
    });

    $(document).on("click", "#btnGroupingDay", function () {
        $("#btnGrouping").find(".active").removeClass("active");
        $("#btnGroupingDay").addClass("active");
        groupmode = 2;
        refreshChart();
    });

    $(document).on("click", "#btnGroupingWeek", function () {
        $("#btnGrouping").find(".active").removeClass("active");
        $("#btnGroupingWeek").addClass("active");
        groupmode = 3;
        refreshChart();
    });

    $(document).on("click", "#btnGroupingMonth", function () {
        $("#btnGrouping").find(".active").removeClass("active");
        $("#btnGroupingMonth").addClass("active");
        groupmode = 4;
        refreshChart();
    });
    //init on doc loaded done
    $(document).ready(function () {
        refreshChart();
    });
</script>

