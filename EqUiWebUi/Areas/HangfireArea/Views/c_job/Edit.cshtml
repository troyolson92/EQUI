@model EqUiWebUi.Models.c_job

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>c_job</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)
    <div class="form-group">
        @Html.LabelFor(model => model.enabled, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.enabled)
                @Html.ValidationMessageFor(model => model.enabled, "", new { @class = "text-danger" })
                @Html.HelpTextFor(model => model.enabled)
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.c_schedule_id, "c_schedule_id", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("c_schedule_id", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.c_schedule_id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.c_datasource_id, "c_datasource_id", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("c_datasource_id", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.c_datasource_id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.sqlCommand, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="panel" style="border:ridge">
                <textarea id="sqlCommand" name="sqlStatement">@Model.sqlCommand</textarea>
            </div>
            @Html.ValidationMessageFor(model => model.sqlCommand, "", new { @class = "text-danger" })
            @Html.HelpTextFor(model => model.sqlCommand)

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ordinal, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ordinal, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ordinal, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.interval, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.interval, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.interval, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.continueOnJobFailure, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.continueOnJobFailure)
                @Html.ValidationMessageFor(model => model.continueOnJobFailure, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.maxRuntime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.maxRuntime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.maxRuntime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.warnRuntime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.warnRuntime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.warnRuntime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>



@section scripts{
    @*http://codemirror.net/doc/manual.html*@
    <script src="~/Scripts/Codemirror/codemirror.js"></script>
    <link href="~/Content/codemirror/codemirror.css" rel="stylesheet" />
    <link href="~/Content/codemirror/neat.css" rel="stylesheet" />
    <script src="~/Scripts/Codemirror/mode/sql.js"></script>

    <script>
        //for code mirror editor
        //sqlstatement
        var sqlStatementCodeMirror = CodeMirror.fromTextArea(document.getElementById("sqlCommand"), {
            lineNumbers: true,
            mode: "sql",
            theme: "neat"
        });

    </script>
}
