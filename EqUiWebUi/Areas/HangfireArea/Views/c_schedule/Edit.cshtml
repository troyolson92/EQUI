@model EqUiWebUi.Models.c_schedule

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>c_schedule</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)
    <div class="form-group">
        @Html.LabelFor(model => model.enabled, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.enabled)
                @Html.ValidationMessageFor(model => model.enabled, "", new { @class = "text-danger" })
                @Html.HelpTextFor(model => model.enabled)
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.jcron, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div id="jCron"></div>
            <p></p>
            <div>
                <input class="form-control text-box single-line" id="jcron" name="jcron" type="text" value="">
            </div>
            @Html.ValidationMessageFor(model => model.jcron, "", new { @class = "text-danger" })
            @Html.HelpTextFor(model => model.jcron)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.runContinues, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.runContinues)
                @Html.ValidationMessageFor(model => model.runContinues, "", new { @class = "text-danger" })
                @Html.HelpTextFor(model => model.runContinues)
                (this overrules the JCRON setting)
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.minRunInterval, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.minRunInterval, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.minRunInterval, "", new { @class = "text-danger" })
            (waittime between runContinues)
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts{
    @*http://shawnchin.github.io/jquery-cron/*@
    <link href="~/Content/jquery-cron.css" rel="stylesheet" />
    <link href="~/Scripts/gentleSelect/jquery-gentleSelect.css" rel="stylesheet" />
    <script src="~/Scripts/gentleSelect/jquery-gentleSelect.js"></script>
    <script src="~/Scripts/jquery-cron.js"></script>
    <script>
    //for jcron editor
    $('#jCron').cron({
    initial: "@(Model.jcron == null ? "0 * * * *" : Model.jcron)",
    onChange: function () {
        $('#jcron').val($(this).cron("value"));
    }
    });
    </script>
}