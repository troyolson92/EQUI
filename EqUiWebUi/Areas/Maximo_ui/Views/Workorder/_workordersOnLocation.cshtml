@model EqUiWebUi.Areas.Maximo_ui.Models.WorkorderSelectOptions


<div class="card">
    <div class="card-header bg-light">
        <h6 class="card-title text-black-50">
            Workorders
            <a class="fas fa-wrench text-black-50"  href="#" data-toggle="popover" data-placement="bottom" id="workorderOnLocationPopover"></a>
            <a class="far fa-window-restore text-black-50" id="goToWorkordersHyperlink" href="#"></a>
            <span class="clickable float-right text-black-50"><i class="fas fa-chevron-circle-up fa-1" ></i></span>
        </h6>
    </div>
    <div class="card-body">
        <div id="workorderOnLocationGridSpincontainer" style="position:relative">
            <div id="workorderOnLocationGrid" class="mvc-grid"></div>
        </div>
    </div>
</div>


@*popover content*@
<div class="d-none" id="workorderOnLocationPopoverContent">
    <div class="card">
        <div class="card-body">
            <div class="form-group">
                <div class="form-group">
                    @Html.LabelFor(m => m.b_ciblings, new { @class = "control-label col-6"})
                    <div class="col-6">
                        @Html.CheckBoxFor(m => m.b_ciblings, new { @class = "form-control input-md" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.b_preventive, new { @class = "control-label col-6"})
                    <div class="col-6">
                        @Html.CheckBoxFor(m => m.b_preventive, new { @class = "form-control input-md" })
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!--_workorderOnLocation-->
<script>
    //enable popover for settings.
    $("#workorderOnLocationPopover").popover({
        html: true,
        content: function () {
            return $('#workorderOnLocationPopoverContent').html();
        },
    });
    //
    var workorderOnLocationGridspinner = new Spinner();
    //build query string
    function workorderOnLocationGridUrlParms() {
        var result = "&location=@Model.location" +
            "&locancestor=@Model.locancestor" +
            "&b_ciblings=" + $('#b_ciblings').is(':checked')  +
            "&b_preventive=" + $('#b_preventive').is(':checked') +
            "&jpnum=@Model.jpnum" +
            "&worktype=@Model.worktype" +
            "&wonum=@Model.wonum" +
            "&status=@Model.status" +
            "&ownergroup=@Model.ownergroup" +
            "&startdate=@Model.startdate.ToString("yyyy-MM-dd HH:mm:ss")" +
            "&enddate=@Model.enddate.ToString("yyyy-MM-dd HH:mm:ss")" +
            "&RealtimeConn=@Model.realtimeConn"
        return result;
    }
// set url to link back to main workorder view
    $('#goToWorkordersHyperlink').attr('href', '@Url.Action("Workorders")?' + workorderOnLocationGridUrlParms() + "&loadOnInit=true");
//render grid and subscrible to row clicked events
    function loadWorkorderOnLocationGrid() {
        $('#workorderOnLocationGrid').mvcgrid({
            sourceUrl: '@Url.Action("_workordersOnLocationGrid")?' + workorderOnLocationGridUrlParms(), // Grid source url string
            //query: '?search=test', // Grid query string
            requestType: 'get', // Ajax grid request type
            data: {
                // Ajax grid query data
            },
            filters: {
                // Grid filters to extend or use
            },
            reload: true, // Grid reload indicator
            rowClicked: function (row, data, e) {
                //if row already has this clase close the modal
                if ($(row).hasClass("bg-info")) {
                    $("#placeholder").remove();
                    $(row).removeClass("bg-info");
                    return;
                }
                //clear selected rows for this table
                $('tr').removeClass('bg-info'); //THIS IS WRONG
                $(row).addClass("bg-info");
                $("#placeholder").remove(); //clear placeholder is exists
                //add new placeholder afhter selected row
                $(row).after('<tr id="placeholder"><td colspan="10000"><div class=""><div class="" id ="placeholderPartial"></div></div></td></tr>');
                //animation
                $("#placeholderPartial").html("<div class='card-body'><i class='fa fa-spinner fa-pulse fa-2x fa-fw'></i><span class='sr-only'></span>Loading....</div>");
                //load url in placeholder
                var url = "@Url.Action("_woDetails", "WorkorderDetails")?RealtimeConn=@Model.realtimeConn&wonum=" + data.WONUM;
                $("#placeholderPartial").load(url);
            },
            reloadStarted: function () {
                workorderOnLocationGridspinner.spin(document.getElementById('workorderOnLocationGridSpincontainer'));
                // this - grid instance which invoked the event
            },
            reloadEnded: function () {
                workorderOnLocationGridspinner.stop();
                //simulate click on first row so that the details load automatic IF ROWCOUNT == 1
                console.log($('#Workorders>table>tbody>tr').length);
                if ($('#Workorders>table>tbody>tr').length == 1) {
                    $("#Workorders>table>tbody>tr:first").trigger('click');
                }
                //subscribe to click event (launch external window)
                initUrlNewWindow();
            },
            reloadFailed: function (result) {
                workorderOnLocationGridspinner.stop();
                $("#workorderOnLocationGrid").html("Error while loading!!!");
                // this - grid instance which invoked the event
                // result - failed ajax response result
            }
        });
    }
//init grid
    loadWorkorderOnLocationGrid();
    //subscrible to option checkbox click event
    $('#b_ciblings').click(function () {
        loadWorkorderOnLocationGrid();
    });

    $('#b_preventive').click(function () {
        loadWorkorderOnLocationGrid();
    });
</script>
