@model EqUiWebUi.Areas.user_management.Models.users

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>users</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LocationRoot, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <p>
                    @Html.DropDownList("LocationRootPreselect", (SelectList)ViewBag.AreaSelectlist, htmlAttributes: new { @class = "form-control" }, optionLabel: "--Select a location--")
                </p>
                @Html.EditorFor(model => model.LocationRoot, Model.Locked ? (object)new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LocationRoot, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AssetRoot, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <p>
                    @MyFilters.AssetDropdownGlobal("AssetRootPreselect")
                </p>
                @Html.EditorFor(model => model.AssetRoot, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AssetRoot, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ResponsibleArea, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <p>
                    @Html.DropDownList("ResponsibleAreaPreselect", (SelectList)ViewBag.OwnershipSelectlist, htmlAttributes: new { @class = "form-control" }, optionLabel: "--Select--")
                </p>
                @Html.EditorFor(model => model.ResponsibleArea, Model.Locked ? (object)new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ResponsibleArea, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Culture, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.DropDownList("Culture", (SelectList)ViewBag.cultrueSelectlist, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Culture, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Locked, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Locked)
                    @Html.ValidationMessageFor(model => model.Locked, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Blocked, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Blocked)
                    @Html.ValidationMessageFor(model => model.Blocked, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    $('#LocationRootPreselect').on('change', function () {
        $('#LocationRoot')[0].value = this.value;
    });

    $('#AssetRootPreselect').on('change', function () {
        $('#AssetRoot')[0].value = this.value;
    });

    $('#ResponsibleAreaPreselect').on('change', function () {
        $('#ResponsibleArea')[0].value = this.value;
    });
</script>