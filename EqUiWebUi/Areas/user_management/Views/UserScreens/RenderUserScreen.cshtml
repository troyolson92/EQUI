@model EqUiWebUi.Areas.user_management.Models.L_Screens
@{
    ViewBag.Title = Model.Discription;
}

@*If you are 'impersonating' somebody else show it*@
@if (@HttpContext.Current.Session["Impersonating"] != "")
{
    <div class="label" style="background:black;">
            <div style="z-index: 2; position: absolute; top: 0px; right: 0px; font-size:x-small">
                <div class="badge-pill bg-danger">
                    You are impersonating!
                    @CurrentUser.Getuser.username
                </div>
            </div>
    </div>
}

    <!--page gets renderd in this iframe-->
    <body style="margin:0px; padding:0px;">
        <iframe id="@("IframeScreenID" + Model.id)" src="@Model.ScreenUrl" frameborder="0" style="height:100%;width:100%;position:absolute;top:0px;left:0px;right:0px;bottom:0px" class="Zoomlevel"></iframe>
    </body>

<style>
    .Zoomlevel {
        -webkit-transform: scale(@Model.ZoomLevel.GetValueOrDefault(1));
    }
</style>

<!--Modal for messages-->
<div id="RenderUserScreenMessage" class="modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-content">Loading....</div>
</div>

<div id="RenderUserMessageIframe" class="modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-content">Loading....</div>
</div>

    @section scripts{
        <script src="~/Scripts/jquery.signalR-2.2.2.js"></script>
        <script src="~/signalr/js"></script>
        <script>
        //start signalR
        $.connection.hub.start()
            .done(function () {
                console.log("SignalR connected");
                $.connection.screenHub.server.joinGroup("ScreenID"+"@Model.id");
                $.connection.screenHub.server.joinGroup("ScreenNum"+"@Model.Screen_num");
                $.connection.screenHub.server.announce("Screen connected ID: " + "@Model.id");
            })
            .fail(function () { console.log("SignalR connect ERROR") });

        //trigger full window reload
        $.connection.screenHub.client.FullRefresh = function () {
            console.log("FullRefresh triggerd");
            location.reload();
        }

        //trigger iframe  reload
        $.connection.screenHub.client.Refresh = function () {
            console.log("Refresh triggerd");
            $.toaster({ title: 'Refresh', priority: 'info', message: 'Refresh' });
            $('#UserScreenIframe').attr('src', function (i, val) { return val; });
        }

        //trigger show message
        $.connection.screenHub.client.DisplayMessage = function (showtime, message) {
            console.log("DisplayMessage triggerd");
            console.log(message);
            console.log(showtime);
            $('#RenderUserScreenMessage').removeData('bs.modal');
            $('#RenderUserScreenMessage').html('<div class="modal-content">' + message +  '</div>');
            $('#RenderUserScreenMessage').modal();
        }

        //trigger show popover Iframe
        $.connection.screenHub.client.DisplayPage = function (showtime, url) {
            console.log("DisplayPage triggerd");
            console.log(url);
            console.log(showtime);
            $('#RenderUserMessageIframe').removeData('bs.modal');
            $('#RenderUserMessageIframe').html('<div class="modal-content"><iframe src="' + url + '"></iframe></div >');
            $('#RenderUserMessageIframe').modal();
        }

        //detect user idle
            var @("IdleScreenID" + Model.id) = 0;
            var @("MotionScreenID" + Model.id) = false;
        //Increment the idle time counter every minute.

        var @("idleInterval" + Model.id ) = setInterval(@("timerIncrementScreenID" + Model.id ), 60000); // 1 minute

        //Zero the idle timer on mouse movement.
            $(this).mousemove(function (e) {
                    @("MotionScreenID" + Model.id) = true;
                    @("IdleScreenID" + Model.id) = 0;
                    console.log("mouse");
                });
            $(this).keypress(function (e) {
                    @("MotionScreenID" + Model.id) = true;
                    @("IdleScreenID" + Model.id) = 0;
                    console.log("key");
                });

            function @("timerIncrementScreenID" + Model.id )() {
                console.log("hit @Model.id" + @("MotionScreenID" + Model.id) );
               @("IdleScreenID" + Model.id) = @("IdleScreenID" + Model.id) + 1;
               if ((@("IdleScreenID" + Model.id) > @ViewBag.interactivityReset)) {
                   if (( @("MotionScreenID" + Model.id) = true)) {
                        console.log("Refresh triggerd (idle)");
                        $.toaster({ title: 'IdleRefresh', priority: 'info', message: 'The screen is refreshed becasue the user is idle for @ViewBag.interactivityReset minutes' });
                        $('@("#IframeScreenID" + Model.id)').attr('src', function (i, val) { return val; });
                        @("MotionScreenID" + Model.id) = false;
                        @("IdleScreenID" + Model.id) = 0;
                   }
               }
            }


        //on model close
        $('#RenderUserScreenMessage').on('hidden.bs.modal', function (e) {
            $('#RenderUserScreenMessage').html('<div class="modal-content">No content</div>');
        });
        $('#RenderUserMessageIframe').on('hidden.bs.modal', function (e) {
            $('#RenderUserMessageIframe').html('<div class="modal-content">No content</div>');
        });

        </script>
    }
