@model IEnumerable<EqUiWebUi.Areas.user_management.Models.L_Screens>

@{
    ViewBag.Title = "Index of user screens";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index of user screens</h2>

<p>
    @Html.ActionLink("Create New screen", "Create")
</p>


@Html.Grid(Model).Named("Screens").Build(columns =>
{
    columns.Add(c => c.id).Titled("ID").Css("xxd-none xxd-sm-block");
    columns.Add(c => c.Screen_num).Titled("scrNum").Css("xxd-none xxd-sm-block");
    columns.Add(c => c.L_users.username).Titled("Render as").InitialSort(GridSortOrder.Asc);
    columns.Add(c => c.Discription).Titled("Discription");
    columns.Add(c => c.ScreenUrl).Titled("ScreenUrl").Css("d-none");
    columns.Add(c => c.ResetRate).Titled("ResetRate").Css("xxd-none xxd-sm-block");
    columns.Add(c => c.id)
                .Titled("")
                .Encoded(false)
                .RenderedAs(c => @Html.ActionLink("Edit", "Edit", new { id = c.id }) + " | " +
                                 @Html.ActionLink("Details", "Details", new { id = c.id }) + " | " +
                                 @Html.ActionLink("Delete", "Delete", new { id = c.id }) + "  | " +
                                 @Html.ActionLink("Show", "RenderUserScreen", new { screenID = c.id })
                ).InitialSort(GridSortOrder.Asc).Filterable(false);
}).Filterable(true).Sortable(true).Pageable(pager =>
{
    pager.RowsPerPage = 15;
}).Empty("Did not find anything").Css("table-hover")
