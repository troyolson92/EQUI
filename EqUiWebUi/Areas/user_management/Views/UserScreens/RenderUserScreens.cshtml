@model List<EqUiWebUi.Areas.user_management.Models.L_Screens>

<div class="card-body pt-0 pb-0" id="placecontainer" style="position:relative">
    <div class="row">
        <div class="col-lg-6 pl-0 pr-2">
            <a href="@Model[0].ScreenUrl"><span class="badge-pill bg-warning text-white">@Model[0].Discription</span></a>
            <div class="intrinsic-container intrinsic-container-16x9">
                <iframe id="frame0" src="@Model[0].ScreenUrl" allowfullscreen frameBorder="0"></iframe>
            </div>
        </div>

        <div class="col-lg-6 pl-2 pr-0">
            <a href="@Model[1].ScreenUrl"><span class="badge-pill bg-warning text-white">@Model[1].Discription</span></a>
            <div class="intrinsic-container intrinsic-container-16x9">
                <iframe id="frame1" src="@Model[1].ScreenUrl" allowfullscreen frameBorder="0"></iframe>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-6 pl-0 pr-2">
            <a href="@Model[2].ScreenUrl"><span class="badge-pill bg-warning text-white">@Model[2].Discription</span></a>
            <div class="intrinsic-container intrinsic-container-16x9">
                <iframe id="frame2" src="@Model[2].ScreenUrl" allowfullscreen frameBorder="0"></iframe>
            </div>
        </div>

        <div class="col-lg-6 pl-2 pr-0">
            <a href="@Model[3].ScreenUrl"><span class="badge-pill bg-warning text-white">@Model[3].Discription</span></a>
            <div class="intrinsic-container intrinsic-container-16x9">
                <iframe id="frame3" src="@Model[3].ScreenUrl" allowfullscreen frameBorder="0"></iframe>
            </div>
        </div>
    </div>

</div>

<style>
    .intrinsic-container {
        position: relative;
        height: 0;
        overflow: hidden;
    }

    /* 16x9 Aspect Ratio */
    /*org value 56.26% for 16x9 flow means smaller => value is set so that on a 4X Iiyama screen in fullscreen browser we have NO vertical scroll*/
    .intrinsic-container-16x9 {
        padding-bottom: 55%;
    }

    /* 4x3 Aspect Ratio */
    .intrinsic-container-4x3 {
        padding-bottom: 75%;
    }

    .intrinsic-container iframe {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }

    body {
        background-color: black;
    }
</style>

@section scripts{
<script type="text/javascript">
            // Find all iframes
            var $iframes = $("iframe");

            // Find &#x26; save the aspect ratio for all iframes
            $iframes.each(function () {
                $(this).data("ratio", this.height / this.width)
                    // Remove the hardcoded width &#x26; height attributes
                    .removeAttr("width")
                    .removeAttr("height");
            });

            // Resize the iframes when the window is resized
            $(window).resize(function () {
                $iframes.each(function () {
                    // Get the parent container&#x27;s width
                    var width = $(this).parent().width();
                    $(this).width(width)
                        .height(width * $(this).data("ratio"));
                });
                // Resize to fix all iframes on page load.
            }).resize()

        //https://benmarshall.me/responsive-iframes/

        //handle Iframes reset Rate.
    //screen1
            if (@Model[0].ResetRate.GetValueOrDefault(0) > 0)
            {
                window.setInterval("reloadIFrame0();", @Model[0].ResetRate.GetValueOrDefault(0)*1000);
            }
            function reloadIFrame0() {
                $('#frame0').attr('src', function (i, val) { return val; });
            }
    //screen2
            if (@Model[1].ResetRate.GetValueOrDefault(0) > 0) {
                window.setInterval("reloadIFrame1();", @Model[1].ResetRate.GetValueOrDefault(0)*1000);
            }
            function reloadIFrame1() {
                $('#frame1').attr('src', function (i, val) { return val; });
            }
    //screen3
            if (@Model[2].ResetRate.GetValueOrDefault(0) > 0) {
                window.setInterval("reloadIFrame2();", @Model[2].ResetRate.GetValueOrDefault(0)*1000);
            }
            function reloadIFrame2() {
                $('#frame2').attr('src', function (i, val) { return val; });
            }
    //screen4
            if (@Model[3].ResetRate.GetValueOrDefault(0) > 0) {
                window.setInterval("reloadIFrame3();", @Model[3].ResetRate.GetValueOrDefault(0)*1000);
            }
            function reloadIFrame3() {
                $('#frame3').attr('src', function (i, val) { return val; });
            }
</script>
}
