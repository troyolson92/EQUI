@model EqUiWebUi.Areas.user_management.Models.users

<h4>Settings saved on server</h4>

@if(@HttpContext.Current.Session["Impersonating"] != "")
{
<div class="label label-danger">
    You are impersonating! user are:
    @HttpContext.Current.Session["Impersonating"]
</div>
}


<div>
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.username)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.username)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LocationRoot)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LocationRoot)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AssetRoot)
        </dt>

        @if (Model.AssetRoot == " ")
        {
            <dd>No filter</dd>
        }
        else
        {
            <dd>
                @Html.DisplayFor(model => model.AssetRoot)
            </dd>
        }

        <dt>
            @Html.DisplayNameFor(model => model.ResponsibleArea)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ResponsibleAreaOptGroup) -> @Html.DisplayFor(model => model.ResponsibleArea)
            @if (Model.ResponsibleAreaLocations != null)
            {
                <ul class="text-muted">
                    @foreach (string item in Model.ResponsibleAreaLocations)
                    {
                        <li>@item</li>
                    }
                </ul>
            }
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Culture)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Culture)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Locked)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Locked)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Blocked)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Blocked)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Comment)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Comment)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit")
</p>
<hr />

<h4>Change setting for just this session</h4>
<div>
    <dl class="dl-horizontal">

        <dt>
            @Html.DisplayNameFor(model => model.LocationRoot)
        </dt>

        <dd>
            @Html.DropDownList("LocationRoot", (SelectList)ViewBag.AreaSelectlist, htmlAttributes: new { @class = "form-control" }, optionLabel: "--Select a location--")
        </dd>

        <p></p>
        
        <dt>
            @Html.DisplayNameFor(model => model.AssetRoot)
        </dt>

        <dd>
            @MyFilters.AssetDropdownGlobal("AssetRoot")
        </dd>
    </dl>
<p>
  @Html.ActionLink("Reset to server values", "ResetCookie")
</p>
</div>

<script>
//change session cookie if a session change is made
    $('#LocationRoot').on('change', function () {
        $.ajax(
            {
                url: '@Url.Action("SetCookie", "user", new { area = "user_management" },null)' + '?key=LocationRoot&value=' + this.value,
                async: false,
            });
        location.reload();
    });

    $('#AssetRoot').on('change', function () {
        $.ajax(
            {
                url: '@Url.Action("SetCookie", "user", new { area = "user_management" },null)' + '?key=AssetRoot&value=' + this.value,
                async: false,
            });
        location.reload();
    });
</script>




