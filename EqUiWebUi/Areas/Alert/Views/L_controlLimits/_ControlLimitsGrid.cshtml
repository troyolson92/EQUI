@model IQueryable<EqUiWebUi.Areas.Alert.Models.l_controlLimits>
@Html.Grid(Model).Named("l_controlLimits").Build(columns =>
{
    columns.Add(c => c.id).Titled("ID").InitialSort(GridSortOrder.Desc).Css("d-none d-lg-table-cell");
    columns.Add(c => c.c_triggers.alertType).Titled("alertType");
    columns.Add(c => c.CreateDate).Titled("CreateDate").Formatted("{0:dd-MM-yyyy HH:mm:ss}").Css("d-none d-lg-table-cell");
    columns.Add(c => c.L_CreateUser.username).Titled("L_CreateUser").Css("d-none d-lg-table-cell");
    columns.Add(c => c.alarmobject).Titled("alarmobject");
    columns.Add(c => c.UpperLimit).Titled("UCL");
    columns.Add(c => c.LowerLimit).Titled("LCL");
    columns.Add(c => c.l_variants.variantGroup).Titled("variantGroup");
    columns.Add(c => c.Comment).Titled("Comment");
    columns.Add(c => c.isdead).Titled("isdead");
    //add edit button
    columns.Add(c => c)
                .Titled("")
                .Encoded(false)
                .RenderedAs(c => MyFilters.IconActionLink(Url.Action("Edit", new { id = c.id, closeOnSave = true }), "fas fa-pencil-alt", "", "Edit this controllimit", enabeld: !c.isdead, classes: "OpenNewWindow")
                ).Filterable(false);

}).Filterable().Sortable().Pageable(pager =>
{
    pager.RowsPerPage = 20;
    pager.PageSizes = new Dictionary<Int32, String> { { 0, "All" }, { 20, "20" }, { 40, "40" }, { 80, "80" }, { 100, "100" } };
    pager.ShowPageSizes = true;
}).Empty("Did not find anything").Css("table-hover")


<script>
    //subscribe to click event (launch external window)
    initUrlNewWindow();
</script>