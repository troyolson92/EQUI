@model EqUiWebUi.Areas.Alert.Models.l_controlLimits

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@if ((ViewBag.variantCount ?? 0) != 0)
{
    <div class="alert alert-danger">
        <h3>You are editing multible records!</h3>
        <div class="badge">Count:@ViewBag.variantCount</div>
    </div>
}
else if (Model.l_variants_id.HasValue)
{
    <div class="alert alert-danger">
        <h3>This control limit is part of a group</h3>
        <div>some values can not be edit if the control limit is part of a group</div>
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>l_controlLimits</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)
        @Html.HiddenFor(model => model.isdead)

        <div class="form-group">
            @Html.LabelFor(model => model.c_trigger_id, "c_trigger_id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.c_trigger_id)
                @Html.DisplayFor(model => model.c_triggers.alertType)
                @Html.ValidationMessageFor(model => model.c_trigger_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UpperLimit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.l_variants_id.HasValue && (ViewBag.variantCount ?? 0) == 0)
                {
                    @Html.DisplayFor(model => model.UpperLimit, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.HiddenFor(model => model.UpperLimit)
                }
                else
                {

                    @Html.EditorFor(model => model.UpperLimit, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UpperLimit, "", new { @class = "text-danger" })
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LowerLimit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.l_variants_id.HasValue && (ViewBag.variantCount ?? 0) == 0)
                {
                    @Html.DisplayFor(model => model.LowerLimit, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.HiddenFor(model => model.LowerLimit)
                }
                else
                {

                    @Html.EditorFor(model => model.LowerLimit, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LowerLimit, "", new { @class = "text-danger" })
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.alarmobject, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if ((ViewBag.variantCount ?? 0) != 0)
                {
                    <div>Multible objects</div>
                }
                else
                {
                    @Html.EditorFor(model => model.alarmobject, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.alarmobject, "", new { @class = "text-danger" })
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.l_variants_id, "l_variants_id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if ((ViewBag.variantCount ?? 0) != 0)
                {
                    @Html.DisplayFor(model => model.l_variants.variantGroup, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.Hidden("l_variants_group_id", Model.l_variants_id);
                }
                else
                {
                    @Html.DropDownList("l_variants_id", null, htmlAttributes: new { @class = "form-control" }, optionLabel: "--no group--")
                    @Html.ValidationMessageFor(model => model.l_variants_id, "", new { @class = "text-danger" })
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
