@model EqUiWebUi.Areas.Alert.Models.h_alert


<div class="form-horizontal">
    <hr />
    <h4>Information about this alert (id:@Model.id)</h4>
    <div class="form-group">
        @Html.LabelFor(model => model.location, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.location, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HelpTextFor(model => model.location)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.alarmobject, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.alarmobject, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HelpTextFor(model => model.alarmobject)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.locationTree, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.locationTree, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.locationTree, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Classification, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Classification, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Classification, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.info, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.info, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HelpTextFor(model => model.info)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.C_timestamp, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.C_timestamp, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HelpTextFor(model => model.C_timestamp)
        </div>
    </div>

    @if (Model.c_triggers.hasControlLimits)
    {
        <hr />
        //calc a logical start and enddate based on the alert. 
        System.DateTime _startdate = Model.C_timestamp.AddDays(-30);
        System.DateTime _enddate;
        //if alert stil open take data until now 
        if (Model.state == (int)EqUiWebUi.Areas.Alert.Models.alertState.WGK || Model.state == (int)EqUiWebUi.Areas.Alert.Models.alertState.OKREQ)
        {
            _enddate = System.DateTime.Now;
        }
        else //if closed take data until 2 days after last triggerd.
        {
            _enddate = Model.lastTriggerd.AddDays(2);
        }


        @Html.Action("_GetControlChart", "Controlchart", new
        {
            chartname = Model.c_triggers.alertType,
            alarmobject = Model.alarmobject,
            c_trigger_id = Model.c_triggers.id,
            startdate = _startdate,
            enddate= _enddate
        })

        <hr />

        <div class="card">
            <div class="card-header bg-light">
                <h6 class="card-title">
                    Controllimits for alarmobject:
                    <strong>@Model.alarmobject.Trim()</strong> c_trigger_id:
                    <strong>@Model.c_tirgger_id</strong>
                    <span class="clickable float-right text-black-50"><i class="fas fa-chevron-circle-up fa-1"></i></span>
                </h6>
            </div>

            <div class="card-body">
                @Html.Action("_list", "L_controlLimits", new
                {
                    alarmobject = Model.alarmobject,
                    c_trigger_id = Model.c_tirgger_id,
                    showIsDead = true //show history for control limit
                })
            </div>
        </div>

        <hr />
    }

    <div class="form-group">
        @Html.LabelFor(model => model.comments, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (Model.comments == null)
            {
                <h6 class='card-subtitle mb-2 text-muted'>no comments....</h6>
            }
            else
            {
                @Html.Raw(Model.comments)
            }
        </div>

    </div>
</div>
