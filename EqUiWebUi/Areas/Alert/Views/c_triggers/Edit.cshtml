@model EqUiWebUi.Areas.Alert.Models.c_triggers

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit this alert trigger</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Edit alert trigger id:@Model.id</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)

    <div class="panel panel-primary">
        <div class="panel-heading">Basics</div>
        <div class="panel-body">
            <div class="form-group">
                @Html.LabelFor(model => model.enabled, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.enabled)
                        @Html.ValidationMessageFor(model => model.enabled, "", new { @class = "text-danger" })
                        @Html.HelpTextFor(model => model.enabled)
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.discription, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.discription, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.discription, "", new { @class = "text-danger" })
                    @Html.HelpTextFor(model => model.discription)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.alertType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.alertType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.alertType, "", new { @class = "text-danger" })
                    @Html.HelpTextFor(model => model.alertType)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.sqlStqStatement, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*Summer note is NO good for this must use http://codemirror.net/doc/manual.html*@
                    <textarea id="sqlStqStatement" name="sqlStqStatement">@Model.sqlStqStatement</textarea>
                    @Html.ValidationMessageFor(model => model.sqlStqStatement, "", new { @class = "text-danger" })
                    @Html.HelpTextFor(model => model.sqlStqStatement)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.initial_state, "initial_state", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("initial_state", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.initial_state, "", new { @class = "text-danger" })
                    @Html.HelpTextFor(model => model.initial_state)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Pollrate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Pollrate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Pollrate, "", new { @class = "text-danger" })
                    @Html.HelpTextFor(model => model.Pollrate)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AutoSetStateTechComp, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.AutoSetStateTechComp)
                        @Html.ValidationMessageFor(model => model.AutoSetStateTechComp, "", new { @class = "text-danger" })
                        @Html.HelpTextFor(model => model.AutoSetStateTechComp)
                    </div>
                </div>
            </div>

        </div>
    </div>

    <div class="panel panel-primary">
        <div class="panel-heading">Filters</div>
        <div class="panel-body">

            <div class="form-group">
                @Html.LabelFor(model => model.locationThreeMask, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.locationThreeMask, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.locationThreeMask, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.classificationMask, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.classificationMask, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.classificationMask, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="panel panel-primary">
        <div class="panel-heading">Sms</div>
        <div class="panel-body">

            <div class="form-group">
                @Html.LabelFor(model => model.smsSystem, "smsSystem", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("smsSystem", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.smsSystem, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.smsActivePloeg, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.smsActivePloeg, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.smsActivePloeg, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.smsActiveStartTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.smsActiveStartTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.smsActiveStartTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.smsActiveEndTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.smsActiveEndTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.smsActiveEndTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.smsLimit, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.smsLimit, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.smsLimit, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.smsSend, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.smsSend, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.smsSend, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.smsOnRetrigger, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.smsOnRetrigger)
                        @Html.ValidationMessageFor(model => model.smsOnRetrigger, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
 }

 <div>
            @Html.ActionLink("Back to List", "Index")
        </div>

 @section scripts{
            @*https://summernote.org/getting-started/*@
            <link href="~/Content/summernote.css" rel="stylesheet" />
            <script src="~/Scripts/summernote.js"></script>
            <script>
                $('#sqlStqStatement').summernote({
                    height: 300,                 // set editor height
                    minHeight: null,             // set minimum height of editor
                    maxHeight: null,             // set maximum height of editor
                    focus: false                  // set focus to editable area after initializing summernote
                });
            </script>
        }
