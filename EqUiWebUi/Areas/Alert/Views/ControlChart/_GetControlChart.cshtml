
<div class="card">
    <div class="card-body" id="graphSpinner" style="position:relative">
        <div id="gaphContainer">
            <canvas id='graphCanvas'></canvas>
        </div>
    </div>
</div>


@*https://dima117.github.io/Chart.Scatter/*@
<script src="~/Scripts/Chart.Core.js"></script>
<script src="~/Scripts/Chart.Scatter.js"></script>

<script>
    //global vars
    var ControlChart;

    //get chart data
    function getChartData() {
        //make ajax request
        $.ajax({
            type: 'GET',
            url: "/ControlChart/_getData",
            success: function (returnPayload) {
                console && console.log("request chart data succeeded");
                buildchart(returnPayload, "chartName");
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console && console.log("request chart data failed!!");
                $("#gaphContainer").html('<div>Request failed!!</div>');
            },
            dataType: "json",
            contentType: "application/json",
            processData: false,
            async: true
        });
    };

    //build the chart Calls when ajax request ends
    function buildchart(dataPayload, chartName) {
        //destroy chart if exists
        if (ControlChart) {
            ControlChart.destroy();
        }
        //clear the cancas just to be shure
        $("#graphCanvas").remove();
        //add the new canvas
        $("#gaphContainer").append('<canvas id="graphCanvas" height="400" width="1000" ></canvas>');
        //build the chart
        var ctx = document.getElementById("graphCanvas").getContext("2d");
        //chart options
        var options =
            {

                // Boolean - Whether the line is curved between points
                bezierCurve: true,
                // Number - Tension of the bezier curve between points
                bezierCurveTension: 0.2,
                showTooltips: true,
                scaleShowHorizontalLines: true,
                scaleShowLabels: true,
                scaleLabel: "<%=value%> mm",
                // String - scale type: "number" or "date"
                scaleType: "date",
                // Boolean - Whether to use UTC dates instead local
                useUtc: true,
                // String - short date format (used for scale labels)
                scaleDateFormat: "mm-dd",
                // String - short time format (used for scale labels)
                scaleTimeFormat: "HH:MM",
                // String - full date format (used for point labels)
                scaleDateTimeFormat: "yy-mm-dd HH:MM:ss",
            };
        //dataset
        var data = [
            {
                label: 'UCL',
                strokeColor: '#F16220',
                pointColor: '#F16220',
                pointStrokeColor: '#fff',
                data: [
                    {
                        x: new Date('2018-01-01T00:00:00'),
                        y: 3
                    },
                    {
                        x: new Date('2018-04-01T00:00:00'),
                        y: 2
                    },
                    {
                        x: new Date('2018-05-01T00:00:00'),
                        y: 2
                    },
                    {
                        x: new Date('2018-06-01T00:00:00'),
                        y: 3
                    }
                ]

            },
            {
                label: '2',
                data: dataPayload
            }
        ];
        //build
        ControlChart = new Chart(ctx).Scatter(data, options);
    }


    //init on doc loaded done
    $(document).ready(function () {
        getChartData();
    });
</script>


