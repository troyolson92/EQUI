@model IQueryable<EqUiWebUi.Areas.VASC.Models.rt_job>

@{
    ViewBag.Title = "getBreakdowns";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index getJobs</h2>

@Html.Grid(Model).Named("rt_job").Build(columns =>
{
    columns.Add(c => c.id).Titled("id").InitialSort(GridSortOrder.Desc).Css("d-none");
    columns.Add(c => c.bodyNo).Titled("bodyNo");
    columns.Add(c => c.c_controller.controller_name).Titled("controller_name");
    columns.Add(c => c.ts_Start).Titled("CycleStart").Formatted("{0:dd-MM-yyyy HH:mm:ss}");
    columns.Add(c => c.ts_End).Titled("CycleEnd").Formatted("{0:HH:mm:ss}");
    columns.Add(c => c.ts_breakDownStart).Titled("ts_breakdownStart").Formatted("{0:HH:mm:ss}");
    columns.Add(c => (c.ts_breakDownAck - c.ts_breakDownStart)).Titled("AckTime").Formatted("{0:HH:mm:ss}");
    columns.Add(c => (c.ts_breakDownEnd - c.ts_breakDownAck)).Titled("RepTime").Formatted("{0:HH:mm:ss}");
    columns.Add(c => (c.ts_breakDownEnd - c.ts_breakDownStart)).Titled("StopTime").Formatted("{0:HH:mm:ss}");
    columns.Add(c => c.breakDownCount).Titled("SubstopCount");
    columns.Add(c => c.rt_job_breakdown.FirstOrDefault().h_alarm.L_error._Logtext).Titled("Logtext");
    columns.Add(c => c.rt_job_breakdown.FirstOrDefault().phase1).Titled("phase1");
    columns.Add(c => c)
               .Titled("Job")
               .Encoded(false)
               .RenderedAs(c => MyFilters.IconActionLink(Url.Action("rtJob", "Breakdown", new { Area = "VASC", jobID = c.id }), "fas fa-info-circle", "", "show vasc job details")
               ).Filterable(false);
}).Filterable().Sortable().Pageable(pager =>
{
    pager.RowsPerPage = 20;
    pager.PageSizes = new Dictionary<Int32, String> { { 0, "All" }, { 20, "20" }, { 40, "40" }, { 80, "80" }, { 100, "100" } };
    pager.ShowPageSizes = true;
}).Empty("Did not find anything").Css("table-hover")


@section scripts{
    <script>
        //full with screen
        $("#allcontent").removeClass("body-content");
        $("#allcontent").removeClass("container");
    </script>
}