@model EqUiWebUi.Areas.VASC.Models.c_controller_class

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>c_controller_class</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.doConnect, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.doConnect)
                    @Html.ValidationMessageFor(model => model.doConnect, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.evStateChange, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">


                @Html.DropDownList("tsusers", Model._evStateChange, "optlabel", new { @class = "form-control", multiple = "multiple", size = "5" })


                @Html.EditorFor(model => model.evStateChange, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.evStateChange, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.evOperatingModeChange, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.evOperatingModeChange, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.evOperatingModeChange, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.evConnectionChange, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.evConnectionChange, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.evConnectionChange, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.evExecutionStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.evExecutionStatus, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.evExecutionStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.evExecutionStatusTRob1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.evExecutionStatusTRob1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.evExecutionStatusTRob1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.evBackupCompleted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.evBackupCompleted, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.evBackupCompleted, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.evDataResolveChange, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.evDataResolveChange, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.evDataResolveChange, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.evExecutionCycleChange, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.evExecutionCycleChange, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.evExecutionCycleChange, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.evTaskEnabledChange, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.evTaskEnabledChange, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.evTaskEnabledChange, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.evMasterChange, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.evMasterChange, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.evMasterChange, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.evMotionPointerTRob1Change, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.evMotionPointerTRob1Change, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.evMotionPointerTRob1Change, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.evProgramPointerTRob1Change, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.evProgramPointerTRob1Change, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.evProgramPointerTRob1Change, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.evMotionPointerTRob1ManualChange, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.evMotionPointerTRob1ManualChange, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.evMotionPointerTRob1ManualChange, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.evProgramPointerTRob1ManualChange, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.evProgramPointerTRob1ManualChange, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.evProgramPointerTRob1ManualChange, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cVariableMask, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cVariableMask, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cVariableMask, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cVariableSearchMask, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cVariableSearchMask, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cVariableSearchMask, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cDeviceInfoMask, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cDeviceInfoMask, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cDeviceInfoMask, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cCSVLogMask, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cCSVLogMask, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cCSVLogMask, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cJobMask, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cJobMask, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cJobMask, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.logCategoryMask, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.logCategoryMask, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.logCategoryMask, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.handleHSocket, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.handleHSocket)
                    @Html.ValidationMessageFor(model => model.handleHSocket, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.setClock, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.setClock, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.setClock, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.evLogMessageAction, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.evLogMessageAction, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.evLogMessageAction, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cPJVEventMask, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cPJVEventMask, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cPJVEventMask, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cErrorNoLogMask, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cErrorNoLogMask, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cErrorNoLogMask, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cAlarmIgnoreMask, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cAlarmIgnoreMask, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cAlarmIgnoreMask, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<!--Edit script-->
@section scripts{
    @*http://davidstutz.de/bootstrap-multiselect/*@
    <script src="~/Scripts/bootstrap-multiselect.js"></script>
    <link href="~/Content/bootstrap-multiselect.css" rel="stylesheet" />
    <script>
        //https://forums.asp.net/t/2121112.aspx?Html+Dropdown+with+multiple+selections
        $('#tsusers').multiselect();
    </script>
}