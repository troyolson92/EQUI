@model IEnumerable<EqUiWebUi.Areas.VASC.Models.c_service_setup>

@Html.Grid(Model).Named("c_service_setup").Build(columns =>
{
    columns.Add(c => c.id).Titled("id").InitialSort(GridSortOrder.Asc).Css("tablesaw-priority-0");
    // columns.Add(c => c.bit_id).Titled("bit_id"); 
    columns.Add(c => EqUiWebUi.Areas.VASC.Models.VASCenums.intArrayTostring(c._Enable_bit_MASK)).Titled("_bit_MASK").Filterable(true).Css("tablesaw-priority-6");
    columns.Add(c => c.name).Titled("name").Css("tablesaw-priority-persist");
    columns.Add(c => c.value).Titled("value");
    columns.Add(c => c.description).Titled("description").Css("tablesaw-priority-6");
    columns.Add(c => c)
                    .Titled("Tools")
                    .Encoded(false)
                    .RenderedAs(c => MyHtmlHelpers.IconActionLink(Url.Action("Edit", new { id = c.id }), "fas fa-pencil-alt", "", "Edit", OpenNewWindow:true).ToHtmlString() +
                                     MyHtmlHelpers.IconActionLink(Url.Action("Delete", new { id = c.id }), "fas fa-trash-alt text-danger", "", "Delete", OpenNewWindow: true).ToHtmlString()
                    ).Filterable(false);
}).Filterable().Sortable().Pageable(pager =>
{
    pager.RowsPerPage = 10;
    pager.PageSizes = new Dictionary<Int32, String> { { 0, "All" }, { 10, "10" }, { 20, "20" }, { 40, "40" }, { 80, "80" }, { 100, "100" } };
    pager.ShowPageSizes = true;
}).Empty("Did not find anything").Css("table-hover tablesaw-on")


