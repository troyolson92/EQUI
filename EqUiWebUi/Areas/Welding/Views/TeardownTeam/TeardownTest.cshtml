@model IEnumerable<EqUiWebUi.Areas.Welding.Models.test>


@{
    ViewBag.Title = "test";
   
}

<h2>teardown replace sis6000 test</h2>
<div class=" = " row">
    @Html.Grid(Model).Named("test").Build(columns =>

    {
        columns.Add(c => c.TDTSpot).Titled("TDTspot");
        columns.Add(c => c.NomDiameter).Titled("NomDiameter").Formatted("{0:dd-MM-yyyy HH:mm:ss}");
        columns.Add(c => c.MeasDiameter).Titled("MeasDiameter");

    }).Css("css-classes").AppendCss("table-hover").Filterable().Pageable(pager =>
    {
        pager.RowsPerPage = 20;
        pager.PageSizes = new Dictionary<Int32, String>
        { { 0, "All" } };
        //{ 20, "20" }, { 40, "40" }, { 80, "80" }, { 100, "100" } };
        pager.ShowPageSizes = true;
    }
        ).Sortable();

</div>



@section scripts{
<script src="https://appelsiini.net/download/jquery.jeditable.js"></script>

    }

    <script>
        //full with screen  ::   https://www.youtube.com/watch?v=0Ia-SPThFFY


        $("#allcontent").removeClass("body-content");
        $("#allcontent").removeClass("container");
        $(document).ready(function () {
            var oldValue = "";
            $("edit").editable("/home/savespot", {
                cssclass: 'jeditForm',
                tooltip: 'click to edit',
                width: 'none',
                height: 'none',
                onsubmit: function (settings, original) {
                    oldValue = orginal.revert;
                },
                submitdata: function () {
                    return {
                        id: (this).data("id"),
                        PropertyName: $(this).data("propertyName")
                    }
                }, callback: function () { value, settings); {
            var jsonData = $parseJSON(value);
            if (jsonData.status) {
                $(this).text(jsonData.value);

            }
            else {
                $(this).text(oldValue);

            }
            }
            })

       
    </script>
}
      

