@model EqUiWebUi.Areas.Welding.Models.rt_spottable

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>rt_spottable</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.c_timer)
    @Html.HiddenFor(model => model.C_timestamp)
    @Html.HiddenFor(model => model.AlternativeNumber)
    @Html.HiddenFor(model => model.Comment1)
    @Html.HiddenFor(model => model.Comment2)
    @Html.HiddenFor(model => model.Comment3)
    @Html.HiddenFor(model => model.ElectrodeDia)


    @Html.HiddenFor(model => model.isDead)
    @Html.HiddenFor(model => model.isDuplicate)
    @Html.HiddenFor(model => model.JobCode)
    @Html.HiddenFor(model => model.Model)
    @Html.HiddenFor(model => model.NuggetDemand)
    @Html.HiddenFor(model => model.pjv_joiningpointdata_id)
    @Html.HiddenFor(model => model.PlateCombinationtId)
    @Html.HiddenFor(model => model.PolaritySpot)

    @Html.HiddenFor(model => model.timerId)
    @Html.HiddenFor(model => model.Variant)
    @Html.HiddenFor(model => model.vwscComment)
    @Html.HiddenFor(model => model.weldProgNo)
    @Html.HiddenFor(model => model.Zone)




    <div class="form-group">
        @Html.LabelFor(model => model.SpotName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SpotName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SpotName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.HiddenSpot, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.HiddenSpot)
                @Html.ValidationMessageFor(model => model.HiddenSpot, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GeoSpot, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.GeoSpot)
                @Html.ValidationMessageFor(model => model.GeoSpot, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SpotLeft, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SpotLeft, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SpotLeft, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SpotRight, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SpotRight, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SpotRight, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
