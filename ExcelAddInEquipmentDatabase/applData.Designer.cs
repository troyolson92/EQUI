//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ExcelAddInEquipmentDatabase {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("applData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class applData : global::System.Data.DataSet {
        
        private ASSETSDataTable tableASSETS;
        
        private StoredProceduresDataTable tableStoredProcedures;
        
        private QUERYSDataTable tableQUERYS;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public applData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected applData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ASSETS"] != null)) {
                    base.Tables.Add(new ASSETSDataTable(ds.Tables["ASSETS"]));
                }
                if ((ds.Tables["StoredProcedures"] != null)) {
                    base.Tables.Add(new StoredProceduresDataTable(ds.Tables["StoredProcedures"]));
                }
                if ((ds.Tables["QUERYS"] != null)) {
                    base.Tables.Add(new QUERYSDataTable(ds.Tables["QUERYS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ASSETSDataTable ASSETS {
            get {
                return this.tableASSETS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StoredProceduresDataTable StoredProcedures {
            get {
                return this.tableStoredProcedures;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public QUERYSDataTable QUERYS {
            get {
                return this.tableQUERYS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            applData cln = ((applData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ASSETS"] != null)) {
                    base.Tables.Add(new ASSETSDataTable(ds.Tables["ASSETS"]));
                }
                if ((ds.Tables["StoredProcedures"] != null)) {
                    base.Tables.Add(new StoredProceduresDataTable(ds.Tables["StoredProcedures"]));
                }
                if ((ds.Tables["QUERYS"] != null)) {
                    base.Tables.Add(new QUERYSDataTable(ds.Tables["QUERYS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableASSETS = ((ASSETSDataTable)(base.Tables["ASSETS"]));
            if ((initTable == true)) {
                if ((this.tableASSETS != null)) {
                    this.tableASSETS.InitVars();
                }
            }
            this.tableStoredProcedures = ((StoredProceduresDataTable)(base.Tables["StoredProcedures"]));
            if ((initTable == true)) {
                if ((this.tableStoredProcedures != null)) {
                    this.tableStoredProcedures.InitVars();
                }
            }
            this.tableQUERYS = ((QUERYSDataTable)(base.Tables["QUERYS"]));
            if ((initTable == true)) {
                if ((this.tableQUERYS != null)) {
                    this.tableQUERYS.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "applData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/applData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableASSETS = new ASSETSDataTable();
            base.Tables.Add(this.tableASSETS);
            this.tableStoredProcedures = new StoredProceduresDataTable();
            base.Tables.Add(this.tableStoredProcedures);
            this.tableQUERYS = new QUERYSDataTable();
            base.Tables.Add(this.tableQUERYS);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeASSETS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeStoredProcedures() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeQUERYS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            applData ds = new applData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ASSETSRowChangeEventHandler(object sender, ASSETSRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void StoredProceduresRowChangeEventHandler(object sender, StoredProceduresRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void QUERYSRowChangeEventHandler(object sender, QUERYSRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ASSETSDataTable : global::System.Data.TypedTableBase<ASSETSRow> {
            
            private global::System.Data.DataColumn columnSYSTEMID;
            
            private global::System.Data.DataColumn columnLOCATION;
            
            private global::System.Data.DataColumn columnASSETNUM;
            
            private global::System.Data.DataColumn columnAssetDescription;
            
            private global::System.Data.DataColumn columnLocationTree;
            
            private global::System.Data.DataColumn columncontroller_name;
            
            private global::System.Data.DataColumn columncontroller_type;
            
            private global::System.Data.DataColumn columncontroller_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ASSETSDataTable() {
                this.TableName = "ASSETS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ASSETSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ASSETSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SYSTEMIDColumn {
                get {
                    return this.columnSYSTEMID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOCATIONColumn {
                get {
                    return this.columnLOCATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ASSETNUMColumn {
                get {
                    return this.columnASSETNUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AssetDescriptionColumn {
                get {
                    return this.columnAssetDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LocationTreeColumn {
                get {
                    return this.columnLocationTree;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn controller_nameColumn {
                get {
                    return this.columncontroller_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn controller_typeColumn {
                get {
                    return this.columncontroller_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn controller_idColumn {
                get {
                    return this.columncontroller_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ASSETSRow this[int index] {
                get {
                    return ((ASSETSRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ASSETSRowChangeEventHandler ASSETSRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ASSETSRowChangeEventHandler ASSETSRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ASSETSRowChangeEventHandler ASSETSRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ASSETSRowChangeEventHandler ASSETSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddASSETSRow(ASSETSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ASSETSRow AddASSETSRow(string SYSTEMID, string LOCATION, string ASSETNUM, string AssetDescription, string LocationTree, string controller_name, string controller_type, int controller_id) {
                ASSETSRow rowASSETSRow = ((ASSETSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SYSTEMID,
                        LOCATION,
                        ASSETNUM,
                        AssetDescription,
                        LocationTree,
                        controller_name,
                        controller_type,
                        controller_id};
                rowASSETSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowASSETSRow);
                return rowASSETSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ASSETSDataTable cln = ((ASSETSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ASSETSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSYSTEMID = base.Columns["SYSTEMID"];
                this.columnLOCATION = base.Columns["LOCATION"];
                this.columnASSETNUM = base.Columns["ASSETNUM"];
                this.columnAssetDescription = base.Columns["AssetDescription"];
                this.columnLocationTree = base.Columns["LocationTree"];
                this.columncontroller_name = base.Columns["controller_name"];
                this.columncontroller_type = base.Columns["controller_type"];
                this.columncontroller_id = base.Columns["controller_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSYSTEMID = new global::System.Data.DataColumn("SYSTEMID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSYSTEMID);
                this.columnLOCATION = new global::System.Data.DataColumn("LOCATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCATION);
                this.columnASSETNUM = new global::System.Data.DataColumn("ASSETNUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASSETNUM);
                this.columnAssetDescription = new global::System.Data.DataColumn("AssetDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssetDescription);
                this.columnLocationTree = new global::System.Data.DataColumn("LocationTree", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationTree);
                this.columncontroller_name = new global::System.Data.DataColumn("controller_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontroller_name);
                this.columncontroller_type = new global::System.Data.DataColumn("controller_type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontroller_type);
                this.columncontroller_id = new global::System.Data.DataColumn("controller_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontroller_id);
                this.columnSYSTEMID.MaxLength = 255;
                this.columnLOCATION.MaxLength = 255;
                this.columnASSETNUM.MaxLength = 255;
                this.columnAssetDescription.MaxLength = 255;
                this.columnLocationTree.MaxLength = 2147483647;
                this.columncontroller_name.MaxLength = 50;
                this.columncontroller_type.MaxLength = 32;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ASSETSRow NewASSETSRow() {
                return ((ASSETSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ASSETSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ASSETSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ASSETSRowChanged != null)) {
                    this.ASSETSRowChanged(this, new ASSETSRowChangeEvent(((ASSETSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ASSETSRowChanging != null)) {
                    this.ASSETSRowChanging(this, new ASSETSRowChangeEvent(((ASSETSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ASSETSRowDeleted != null)) {
                    this.ASSETSRowDeleted(this, new ASSETSRowChangeEvent(((ASSETSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ASSETSRowDeleting != null)) {
                    this.ASSETSRowDeleting(this, new ASSETSRowChangeEvent(((ASSETSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveASSETSRow(ASSETSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                applData ds = new applData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ASSETSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StoredProceduresDataTable : global::System.Data.TypedTableBase<StoredProceduresRow> {
            
            private global::System.Data.DataColumn columnSPECIFIC_CATALOG;
            
            private global::System.Data.DataColumn columnSPECIFIC_SCHEMA;
            
            private global::System.Data.DataColumn columnSPECIFIC_NAME;
            
            private global::System.Data.DataColumn columnROUTINE_CATALOG;
            
            private global::System.Data.DataColumn columnROUTINE_SCHEMA;
            
            private global::System.Data.DataColumn columnROUTINE_NAME;
            
            private global::System.Data.DataColumn columnROUTINE_TYPE;
            
            private global::System.Data.DataColumn columnMODULE_CATALOG;
            
            private global::System.Data.DataColumn columnMODULE_SCHEMA;
            
            private global::System.Data.DataColumn columnMODULE_NAME;
            
            private global::System.Data.DataColumn columnUDT_CATALOG;
            
            private global::System.Data.DataColumn columnUDT_SCHEMA;
            
            private global::System.Data.DataColumn columnUDT_NAME;
            
            private global::System.Data.DataColumn columnDATA_TYPE;
            
            private global::System.Data.DataColumn columnCHARACTER_MAXIMUM_LENGTH;
            
            private global::System.Data.DataColumn columnCHARACTER_OCTET_LENGTH;
            
            private global::System.Data.DataColumn columnCOLLATION_CATALOG;
            
            private global::System.Data.DataColumn columnCOLLATION_SCHEMA;
            
            private global::System.Data.DataColumn columnCOLLATION_NAME;
            
            private global::System.Data.DataColumn columnCHARACTER_SET_CATALOG;
            
            private global::System.Data.DataColumn columnCHARACTER_SET_SCHEMA;
            
            private global::System.Data.DataColumn columnCHARACTER_SET_NAME;
            
            private global::System.Data.DataColumn columnNUMERIC_PRECISION;
            
            private global::System.Data.DataColumn columnNUMERIC_PRECISION_RADIX;
            
            private global::System.Data.DataColumn columnNUMERIC_SCALE;
            
            private global::System.Data.DataColumn columnDATETIME_PRECISION;
            
            private global::System.Data.DataColumn columnINTERVAL_TYPE;
            
            private global::System.Data.DataColumn columnINTERVAL_PRECISION;
            
            private global::System.Data.DataColumn columnTYPE_UDT_CATALOG;
            
            private global::System.Data.DataColumn columnTYPE_UDT_SCHEMA;
            
            private global::System.Data.DataColumn columnTYPE_UDT_NAME;
            
            private global::System.Data.DataColumn columnSCOPE_CATALOG;
            
            private global::System.Data.DataColumn columnSCOPE_SCHEMA;
            
            private global::System.Data.DataColumn columnSCOPE_NAME;
            
            private global::System.Data.DataColumn columnMAXIMUM_CARDINALITY;
            
            private global::System.Data.DataColumn columnDTD_IDENTIFIER;
            
            private global::System.Data.DataColumn columnROUTINE_BODY;
            
            private global::System.Data.DataColumn columnROUTINE_DEFINITION;
            
            private global::System.Data.DataColumn columnEXTERNAL_NAME;
            
            private global::System.Data.DataColumn columnEXTERNAL_LANGUAGE;
            
            private global::System.Data.DataColumn columnPARAMETER_STYLE;
            
            private global::System.Data.DataColumn columnIS_DETERMINISTIC;
            
            private global::System.Data.DataColumn columnSQL_DATA_ACCESS;
            
            private global::System.Data.DataColumn columnIS_NULL_CALL;
            
            private global::System.Data.DataColumn columnSQL_PATH;
            
            private global::System.Data.DataColumn columnSCHEMA_LEVEL_ROUTINE;
            
            private global::System.Data.DataColumn columnMAX_DYNAMIC_RESULT_SETS;
            
            private global::System.Data.DataColumn columnIS_USER_DEFINED_CAST;
            
            private global::System.Data.DataColumn columnIS_IMPLICITLY_INVOCABLE;
            
            private global::System.Data.DataColumn columnCREATED;
            
            private global::System.Data.DataColumn columnLAST_ALTERED;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StoredProceduresDataTable() {
                this.TableName = "StoredProcedures";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StoredProceduresDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected StoredProceduresDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SPECIFIC_CATALOGColumn {
                get {
                    return this.columnSPECIFIC_CATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SPECIFIC_SCHEMAColumn {
                get {
                    return this.columnSPECIFIC_SCHEMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SPECIFIC_NAMEColumn {
                get {
                    return this.columnSPECIFIC_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ROUTINE_CATALOGColumn {
                get {
                    return this.columnROUTINE_CATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ROUTINE_SCHEMAColumn {
                get {
                    return this.columnROUTINE_SCHEMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ROUTINE_NAMEColumn {
                get {
                    return this.columnROUTINE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ROUTINE_TYPEColumn {
                get {
                    return this.columnROUTINE_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MODULE_CATALOGColumn {
                get {
                    return this.columnMODULE_CATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MODULE_SCHEMAColumn {
                get {
                    return this.columnMODULE_SCHEMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MODULE_NAMEColumn {
                get {
                    return this.columnMODULE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UDT_CATALOGColumn {
                get {
                    return this.columnUDT_CATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UDT_SCHEMAColumn {
                get {
                    return this.columnUDT_SCHEMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UDT_NAMEColumn {
                get {
                    return this.columnUDT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DATA_TYPEColumn {
                get {
                    return this.columnDATA_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHARACTER_MAXIMUM_LENGTHColumn {
                get {
                    return this.columnCHARACTER_MAXIMUM_LENGTH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHARACTER_OCTET_LENGTHColumn {
                get {
                    return this.columnCHARACTER_OCTET_LENGTH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COLLATION_CATALOGColumn {
                get {
                    return this.columnCOLLATION_CATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COLLATION_SCHEMAColumn {
                get {
                    return this.columnCOLLATION_SCHEMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COLLATION_NAMEColumn {
                get {
                    return this.columnCOLLATION_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHARACTER_SET_CATALOGColumn {
                get {
                    return this.columnCHARACTER_SET_CATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHARACTER_SET_SCHEMAColumn {
                get {
                    return this.columnCHARACTER_SET_SCHEMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHARACTER_SET_NAMEColumn {
                get {
                    return this.columnCHARACTER_SET_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NUMERIC_PRECISIONColumn {
                get {
                    return this.columnNUMERIC_PRECISION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NUMERIC_PRECISION_RADIXColumn {
                get {
                    return this.columnNUMERIC_PRECISION_RADIX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NUMERIC_SCALEColumn {
                get {
                    return this.columnNUMERIC_SCALE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DATETIME_PRECISIONColumn {
                get {
                    return this.columnDATETIME_PRECISION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INTERVAL_TYPEColumn {
                get {
                    return this.columnINTERVAL_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INTERVAL_PRECISIONColumn {
                get {
                    return this.columnINTERVAL_PRECISION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TYPE_UDT_CATALOGColumn {
                get {
                    return this.columnTYPE_UDT_CATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TYPE_UDT_SCHEMAColumn {
                get {
                    return this.columnTYPE_UDT_SCHEMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TYPE_UDT_NAMEColumn {
                get {
                    return this.columnTYPE_UDT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SCOPE_CATALOGColumn {
                get {
                    return this.columnSCOPE_CATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SCOPE_SCHEMAColumn {
                get {
                    return this.columnSCOPE_SCHEMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SCOPE_NAMEColumn {
                get {
                    return this.columnSCOPE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MAXIMUM_CARDINALITYColumn {
                get {
                    return this.columnMAXIMUM_CARDINALITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DTD_IDENTIFIERColumn {
                get {
                    return this.columnDTD_IDENTIFIER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ROUTINE_BODYColumn {
                get {
                    return this.columnROUTINE_BODY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ROUTINE_DEFINITIONColumn {
                get {
                    return this.columnROUTINE_DEFINITION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXTERNAL_NAMEColumn {
                get {
                    return this.columnEXTERNAL_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXTERNAL_LANGUAGEColumn {
                get {
                    return this.columnEXTERNAL_LANGUAGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PARAMETER_STYLEColumn {
                get {
                    return this.columnPARAMETER_STYLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IS_DETERMINISTICColumn {
                get {
                    return this.columnIS_DETERMINISTIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SQL_DATA_ACCESSColumn {
                get {
                    return this.columnSQL_DATA_ACCESS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IS_NULL_CALLColumn {
                get {
                    return this.columnIS_NULL_CALL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SQL_PATHColumn {
                get {
                    return this.columnSQL_PATH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SCHEMA_LEVEL_ROUTINEColumn {
                get {
                    return this.columnSCHEMA_LEVEL_ROUTINE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MAX_DYNAMIC_RESULT_SETSColumn {
                get {
                    return this.columnMAX_DYNAMIC_RESULT_SETS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IS_USER_DEFINED_CASTColumn {
                get {
                    return this.columnIS_USER_DEFINED_CAST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IS_IMPLICITLY_INVOCABLEColumn {
                get {
                    return this.columnIS_IMPLICITLY_INVOCABLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CREATEDColumn {
                get {
                    return this.columnCREATED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LAST_ALTEREDColumn {
                get {
                    return this.columnLAST_ALTERED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StoredProceduresRow this[int index] {
                get {
                    return ((StoredProceduresRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StoredProceduresRowChangeEventHandler StoredProceduresRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StoredProceduresRowChangeEventHandler StoredProceduresRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StoredProceduresRowChangeEventHandler StoredProceduresRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StoredProceduresRowChangeEventHandler StoredProceduresRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddStoredProceduresRow(StoredProceduresRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StoredProceduresRow AddStoredProceduresRow(
                        string SPECIFIC_CATALOG, 
                        string SPECIFIC_SCHEMA, 
                        string SPECIFIC_NAME, 
                        string ROUTINE_CATALOG, 
                        string ROUTINE_SCHEMA, 
                        string ROUTINE_NAME, 
                        string ROUTINE_TYPE, 
                        string MODULE_CATALOG, 
                        string MODULE_SCHEMA, 
                        string MODULE_NAME, 
                        string UDT_CATALOG, 
                        string UDT_SCHEMA, 
                        string UDT_NAME, 
                        string DATA_TYPE, 
                        int CHARACTER_MAXIMUM_LENGTH, 
                        int CHARACTER_OCTET_LENGTH, 
                        string COLLATION_CATALOG, 
                        string COLLATION_SCHEMA, 
                        string COLLATION_NAME, 
                        string CHARACTER_SET_CATALOG, 
                        string CHARACTER_SET_SCHEMA, 
                        string CHARACTER_SET_NAME, 
                        byte NUMERIC_PRECISION, 
                        short NUMERIC_PRECISION_RADIX, 
                        int NUMERIC_SCALE, 
                        short DATETIME_PRECISION, 
                        string INTERVAL_TYPE, 
                        short INTERVAL_PRECISION, 
                        string TYPE_UDT_CATALOG, 
                        string TYPE_UDT_SCHEMA, 
                        string TYPE_UDT_NAME, 
                        string SCOPE_CATALOG, 
                        string SCOPE_SCHEMA, 
                        string SCOPE_NAME, 
                        long MAXIMUM_CARDINALITY, 
                        string DTD_IDENTIFIER, 
                        string ROUTINE_BODY, 
                        string ROUTINE_DEFINITION, 
                        string EXTERNAL_NAME, 
                        string EXTERNAL_LANGUAGE, 
                        string PARAMETER_STYLE, 
                        string IS_DETERMINISTIC, 
                        string SQL_DATA_ACCESS, 
                        string IS_NULL_CALL, 
                        string SQL_PATH, 
                        string SCHEMA_LEVEL_ROUTINE, 
                        short MAX_DYNAMIC_RESULT_SETS, 
                        string IS_USER_DEFINED_CAST, 
                        string IS_IMPLICITLY_INVOCABLE, 
                        System.DateTime CREATED, 
                        System.DateTime LAST_ALTERED) {
                StoredProceduresRow rowStoredProceduresRow = ((StoredProceduresRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SPECIFIC_CATALOG,
                        SPECIFIC_SCHEMA,
                        SPECIFIC_NAME,
                        ROUTINE_CATALOG,
                        ROUTINE_SCHEMA,
                        ROUTINE_NAME,
                        ROUTINE_TYPE,
                        MODULE_CATALOG,
                        MODULE_SCHEMA,
                        MODULE_NAME,
                        UDT_CATALOG,
                        UDT_SCHEMA,
                        UDT_NAME,
                        DATA_TYPE,
                        CHARACTER_MAXIMUM_LENGTH,
                        CHARACTER_OCTET_LENGTH,
                        COLLATION_CATALOG,
                        COLLATION_SCHEMA,
                        COLLATION_NAME,
                        CHARACTER_SET_CATALOG,
                        CHARACTER_SET_SCHEMA,
                        CHARACTER_SET_NAME,
                        NUMERIC_PRECISION,
                        NUMERIC_PRECISION_RADIX,
                        NUMERIC_SCALE,
                        DATETIME_PRECISION,
                        INTERVAL_TYPE,
                        INTERVAL_PRECISION,
                        TYPE_UDT_CATALOG,
                        TYPE_UDT_SCHEMA,
                        TYPE_UDT_NAME,
                        SCOPE_CATALOG,
                        SCOPE_SCHEMA,
                        SCOPE_NAME,
                        MAXIMUM_CARDINALITY,
                        DTD_IDENTIFIER,
                        ROUTINE_BODY,
                        ROUTINE_DEFINITION,
                        EXTERNAL_NAME,
                        EXTERNAL_LANGUAGE,
                        PARAMETER_STYLE,
                        IS_DETERMINISTIC,
                        SQL_DATA_ACCESS,
                        IS_NULL_CALL,
                        SQL_PATH,
                        SCHEMA_LEVEL_ROUTINE,
                        MAX_DYNAMIC_RESULT_SETS,
                        IS_USER_DEFINED_CAST,
                        IS_IMPLICITLY_INVOCABLE,
                        CREATED,
                        LAST_ALTERED};
                rowStoredProceduresRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStoredProceduresRow);
                return rowStoredProceduresRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                StoredProceduresDataTable cln = ((StoredProceduresDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StoredProceduresDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSPECIFIC_CATALOG = base.Columns["SPECIFIC_CATALOG"];
                this.columnSPECIFIC_SCHEMA = base.Columns["SPECIFIC_SCHEMA"];
                this.columnSPECIFIC_NAME = base.Columns["SPECIFIC_NAME"];
                this.columnROUTINE_CATALOG = base.Columns["ROUTINE_CATALOG"];
                this.columnROUTINE_SCHEMA = base.Columns["ROUTINE_SCHEMA"];
                this.columnROUTINE_NAME = base.Columns["ROUTINE_NAME"];
                this.columnROUTINE_TYPE = base.Columns["ROUTINE_TYPE"];
                this.columnMODULE_CATALOG = base.Columns["MODULE_CATALOG"];
                this.columnMODULE_SCHEMA = base.Columns["MODULE_SCHEMA"];
                this.columnMODULE_NAME = base.Columns["MODULE_NAME"];
                this.columnUDT_CATALOG = base.Columns["UDT_CATALOG"];
                this.columnUDT_SCHEMA = base.Columns["UDT_SCHEMA"];
                this.columnUDT_NAME = base.Columns["UDT_NAME"];
                this.columnDATA_TYPE = base.Columns["DATA_TYPE"];
                this.columnCHARACTER_MAXIMUM_LENGTH = base.Columns["CHARACTER_MAXIMUM_LENGTH"];
                this.columnCHARACTER_OCTET_LENGTH = base.Columns["CHARACTER_OCTET_LENGTH"];
                this.columnCOLLATION_CATALOG = base.Columns["COLLATION_CATALOG"];
                this.columnCOLLATION_SCHEMA = base.Columns["COLLATION_SCHEMA"];
                this.columnCOLLATION_NAME = base.Columns["COLLATION_NAME"];
                this.columnCHARACTER_SET_CATALOG = base.Columns["CHARACTER_SET_CATALOG"];
                this.columnCHARACTER_SET_SCHEMA = base.Columns["CHARACTER_SET_SCHEMA"];
                this.columnCHARACTER_SET_NAME = base.Columns["CHARACTER_SET_NAME"];
                this.columnNUMERIC_PRECISION = base.Columns["NUMERIC_PRECISION"];
                this.columnNUMERIC_PRECISION_RADIX = base.Columns["NUMERIC_PRECISION_RADIX"];
                this.columnNUMERIC_SCALE = base.Columns["NUMERIC_SCALE"];
                this.columnDATETIME_PRECISION = base.Columns["DATETIME_PRECISION"];
                this.columnINTERVAL_TYPE = base.Columns["INTERVAL_TYPE"];
                this.columnINTERVAL_PRECISION = base.Columns["INTERVAL_PRECISION"];
                this.columnTYPE_UDT_CATALOG = base.Columns["TYPE_UDT_CATALOG"];
                this.columnTYPE_UDT_SCHEMA = base.Columns["TYPE_UDT_SCHEMA"];
                this.columnTYPE_UDT_NAME = base.Columns["TYPE_UDT_NAME"];
                this.columnSCOPE_CATALOG = base.Columns["SCOPE_CATALOG"];
                this.columnSCOPE_SCHEMA = base.Columns["SCOPE_SCHEMA"];
                this.columnSCOPE_NAME = base.Columns["SCOPE_NAME"];
                this.columnMAXIMUM_CARDINALITY = base.Columns["MAXIMUM_CARDINALITY"];
                this.columnDTD_IDENTIFIER = base.Columns["DTD_IDENTIFIER"];
                this.columnROUTINE_BODY = base.Columns["ROUTINE_BODY"];
                this.columnROUTINE_DEFINITION = base.Columns["ROUTINE_DEFINITION"];
                this.columnEXTERNAL_NAME = base.Columns["EXTERNAL_NAME"];
                this.columnEXTERNAL_LANGUAGE = base.Columns["EXTERNAL_LANGUAGE"];
                this.columnPARAMETER_STYLE = base.Columns["PARAMETER_STYLE"];
                this.columnIS_DETERMINISTIC = base.Columns["IS_DETERMINISTIC"];
                this.columnSQL_DATA_ACCESS = base.Columns["SQL_DATA_ACCESS"];
                this.columnIS_NULL_CALL = base.Columns["IS_NULL_CALL"];
                this.columnSQL_PATH = base.Columns["SQL_PATH"];
                this.columnSCHEMA_LEVEL_ROUTINE = base.Columns["SCHEMA_LEVEL_ROUTINE"];
                this.columnMAX_DYNAMIC_RESULT_SETS = base.Columns["MAX_DYNAMIC_RESULT_SETS"];
                this.columnIS_USER_DEFINED_CAST = base.Columns["IS_USER_DEFINED_CAST"];
                this.columnIS_IMPLICITLY_INVOCABLE = base.Columns["IS_IMPLICITLY_INVOCABLE"];
                this.columnCREATED = base.Columns["CREATED"];
                this.columnLAST_ALTERED = base.Columns["LAST_ALTERED"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSPECIFIC_CATALOG = new global::System.Data.DataColumn("SPECIFIC_CATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPECIFIC_CATALOG);
                this.columnSPECIFIC_SCHEMA = new global::System.Data.DataColumn("SPECIFIC_SCHEMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPECIFIC_SCHEMA);
                this.columnSPECIFIC_NAME = new global::System.Data.DataColumn("SPECIFIC_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPECIFIC_NAME);
                this.columnROUTINE_CATALOG = new global::System.Data.DataColumn("ROUTINE_CATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROUTINE_CATALOG);
                this.columnROUTINE_SCHEMA = new global::System.Data.DataColumn("ROUTINE_SCHEMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROUTINE_SCHEMA);
                this.columnROUTINE_NAME = new global::System.Data.DataColumn("ROUTINE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROUTINE_NAME);
                this.columnROUTINE_TYPE = new global::System.Data.DataColumn("ROUTINE_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROUTINE_TYPE);
                this.columnMODULE_CATALOG = new global::System.Data.DataColumn("MODULE_CATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODULE_CATALOG);
                this.columnMODULE_SCHEMA = new global::System.Data.DataColumn("MODULE_SCHEMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODULE_SCHEMA);
                this.columnMODULE_NAME = new global::System.Data.DataColumn("MODULE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODULE_NAME);
                this.columnUDT_CATALOG = new global::System.Data.DataColumn("UDT_CATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUDT_CATALOG);
                this.columnUDT_SCHEMA = new global::System.Data.DataColumn("UDT_SCHEMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUDT_SCHEMA);
                this.columnUDT_NAME = new global::System.Data.DataColumn("UDT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUDT_NAME);
                this.columnDATA_TYPE = new global::System.Data.DataColumn("DATA_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATA_TYPE);
                this.columnCHARACTER_MAXIMUM_LENGTH = new global::System.Data.DataColumn("CHARACTER_MAXIMUM_LENGTH", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHARACTER_MAXIMUM_LENGTH);
                this.columnCHARACTER_OCTET_LENGTH = new global::System.Data.DataColumn("CHARACTER_OCTET_LENGTH", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHARACTER_OCTET_LENGTH);
                this.columnCOLLATION_CATALOG = new global::System.Data.DataColumn("COLLATION_CATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLLATION_CATALOG);
                this.columnCOLLATION_SCHEMA = new global::System.Data.DataColumn("COLLATION_SCHEMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLLATION_SCHEMA);
                this.columnCOLLATION_NAME = new global::System.Data.DataColumn("COLLATION_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLLATION_NAME);
                this.columnCHARACTER_SET_CATALOG = new global::System.Data.DataColumn("CHARACTER_SET_CATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHARACTER_SET_CATALOG);
                this.columnCHARACTER_SET_SCHEMA = new global::System.Data.DataColumn("CHARACTER_SET_SCHEMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHARACTER_SET_SCHEMA);
                this.columnCHARACTER_SET_NAME = new global::System.Data.DataColumn("CHARACTER_SET_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHARACTER_SET_NAME);
                this.columnNUMERIC_PRECISION = new global::System.Data.DataColumn("NUMERIC_PRECISION", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMERIC_PRECISION);
                this.columnNUMERIC_PRECISION_RADIX = new global::System.Data.DataColumn("NUMERIC_PRECISION_RADIX", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMERIC_PRECISION_RADIX);
                this.columnNUMERIC_SCALE = new global::System.Data.DataColumn("NUMERIC_SCALE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMERIC_SCALE);
                this.columnDATETIME_PRECISION = new global::System.Data.DataColumn("DATETIME_PRECISION", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATETIME_PRECISION);
                this.columnINTERVAL_TYPE = new global::System.Data.DataColumn("INTERVAL_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTERVAL_TYPE);
                this.columnINTERVAL_PRECISION = new global::System.Data.DataColumn("INTERVAL_PRECISION", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTERVAL_PRECISION);
                this.columnTYPE_UDT_CATALOG = new global::System.Data.DataColumn("TYPE_UDT_CATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE_UDT_CATALOG);
                this.columnTYPE_UDT_SCHEMA = new global::System.Data.DataColumn("TYPE_UDT_SCHEMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE_UDT_SCHEMA);
                this.columnTYPE_UDT_NAME = new global::System.Data.DataColumn("TYPE_UDT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE_UDT_NAME);
                this.columnSCOPE_CATALOG = new global::System.Data.DataColumn("SCOPE_CATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCOPE_CATALOG);
                this.columnSCOPE_SCHEMA = new global::System.Data.DataColumn("SCOPE_SCHEMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCOPE_SCHEMA);
                this.columnSCOPE_NAME = new global::System.Data.DataColumn("SCOPE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCOPE_NAME);
                this.columnMAXIMUM_CARDINALITY = new global::System.Data.DataColumn("MAXIMUM_CARDINALITY", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAXIMUM_CARDINALITY);
                this.columnDTD_IDENTIFIER = new global::System.Data.DataColumn("DTD_IDENTIFIER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDTD_IDENTIFIER);
                this.columnROUTINE_BODY = new global::System.Data.DataColumn("ROUTINE_BODY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROUTINE_BODY);
                this.columnROUTINE_DEFINITION = new global::System.Data.DataColumn("ROUTINE_DEFINITION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROUTINE_DEFINITION);
                this.columnEXTERNAL_NAME = new global::System.Data.DataColumn("EXTERNAL_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXTERNAL_NAME);
                this.columnEXTERNAL_LANGUAGE = new global::System.Data.DataColumn("EXTERNAL_LANGUAGE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXTERNAL_LANGUAGE);
                this.columnPARAMETER_STYLE = new global::System.Data.DataColumn("PARAMETER_STYLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARAMETER_STYLE);
                this.columnIS_DETERMINISTIC = new global::System.Data.DataColumn("IS_DETERMINISTIC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_DETERMINISTIC);
                this.columnSQL_DATA_ACCESS = new global::System.Data.DataColumn("SQL_DATA_ACCESS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSQL_DATA_ACCESS);
                this.columnIS_NULL_CALL = new global::System.Data.DataColumn("IS_NULL_CALL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_NULL_CALL);
                this.columnSQL_PATH = new global::System.Data.DataColumn("SQL_PATH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSQL_PATH);
                this.columnSCHEMA_LEVEL_ROUTINE = new global::System.Data.DataColumn("SCHEMA_LEVEL_ROUTINE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCHEMA_LEVEL_ROUTINE);
                this.columnMAX_DYNAMIC_RESULT_SETS = new global::System.Data.DataColumn("MAX_DYNAMIC_RESULT_SETS", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAX_DYNAMIC_RESULT_SETS);
                this.columnIS_USER_DEFINED_CAST = new global::System.Data.DataColumn("IS_USER_DEFINED_CAST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_USER_DEFINED_CAST);
                this.columnIS_IMPLICITLY_INVOCABLE = new global::System.Data.DataColumn("IS_IMPLICITLY_INVOCABLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_IMPLICITLY_INVOCABLE);
                this.columnCREATED = new global::System.Data.DataColumn("CREATED", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATED);
                this.columnLAST_ALTERED = new global::System.Data.DataColumn("LAST_ALTERED", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAST_ALTERED);
                this.columnSPECIFIC_CATALOG.ReadOnly = true;
                this.columnSPECIFIC_CATALOG.MaxLength = 128;
                this.columnSPECIFIC_SCHEMA.ReadOnly = true;
                this.columnSPECIFIC_SCHEMA.MaxLength = 128;
                this.columnSPECIFIC_NAME.AllowDBNull = false;
                this.columnSPECIFIC_NAME.MaxLength = 128;
                this.columnROUTINE_CATALOG.ReadOnly = true;
                this.columnROUTINE_CATALOG.MaxLength = 128;
                this.columnROUTINE_SCHEMA.ReadOnly = true;
                this.columnROUTINE_SCHEMA.MaxLength = 128;
                this.columnROUTINE_NAME.AllowDBNull = false;
                this.columnROUTINE_NAME.MaxLength = 128;
                this.columnROUTINE_TYPE.ReadOnly = true;
                this.columnROUTINE_TYPE.MaxLength = 20;
                this.columnMODULE_CATALOG.ReadOnly = true;
                this.columnMODULE_CATALOG.MaxLength = 128;
                this.columnMODULE_SCHEMA.ReadOnly = true;
                this.columnMODULE_SCHEMA.MaxLength = 128;
                this.columnMODULE_NAME.ReadOnly = true;
                this.columnMODULE_NAME.MaxLength = 128;
                this.columnUDT_CATALOG.ReadOnly = true;
                this.columnUDT_CATALOG.MaxLength = 128;
                this.columnUDT_SCHEMA.ReadOnly = true;
                this.columnUDT_SCHEMA.MaxLength = 128;
                this.columnUDT_NAME.ReadOnly = true;
                this.columnUDT_NAME.MaxLength = 128;
                this.columnDATA_TYPE.ReadOnly = true;
                this.columnDATA_TYPE.MaxLength = 128;
                this.columnCHARACTER_MAXIMUM_LENGTH.ReadOnly = true;
                this.columnCHARACTER_OCTET_LENGTH.ReadOnly = true;
                this.columnCOLLATION_CATALOG.ReadOnly = true;
                this.columnCOLLATION_CATALOG.MaxLength = 128;
                this.columnCOLLATION_SCHEMA.ReadOnly = true;
                this.columnCOLLATION_SCHEMA.MaxLength = 128;
                this.columnCOLLATION_NAME.ReadOnly = true;
                this.columnCOLLATION_NAME.MaxLength = 128;
                this.columnCHARACTER_SET_CATALOG.ReadOnly = true;
                this.columnCHARACTER_SET_CATALOG.MaxLength = 128;
                this.columnCHARACTER_SET_SCHEMA.ReadOnly = true;
                this.columnCHARACTER_SET_SCHEMA.MaxLength = 128;
                this.columnCHARACTER_SET_NAME.ReadOnly = true;
                this.columnCHARACTER_SET_NAME.MaxLength = 128;
                this.columnNUMERIC_PRECISION.ReadOnly = true;
                this.columnNUMERIC_PRECISION_RADIX.ReadOnly = true;
                this.columnNUMERIC_SCALE.ReadOnly = true;
                this.columnDATETIME_PRECISION.ReadOnly = true;
                this.columnINTERVAL_TYPE.ReadOnly = true;
                this.columnINTERVAL_TYPE.MaxLength = 30;
                this.columnINTERVAL_PRECISION.ReadOnly = true;
                this.columnTYPE_UDT_CATALOG.ReadOnly = true;
                this.columnTYPE_UDT_CATALOG.MaxLength = 128;
                this.columnTYPE_UDT_SCHEMA.ReadOnly = true;
                this.columnTYPE_UDT_SCHEMA.MaxLength = 128;
                this.columnTYPE_UDT_NAME.ReadOnly = true;
                this.columnTYPE_UDT_NAME.MaxLength = 128;
                this.columnSCOPE_CATALOG.ReadOnly = true;
                this.columnSCOPE_CATALOG.MaxLength = 128;
                this.columnSCOPE_SCHEMA.ReadOnly = true;
                this.columnSCOPE_SCHEMA.MaxLength = 128;
                this.columnSCOPE_NAME.ReadOnly = true;
                this.columnSCOPE_NAME.MaxLength = 128;
                this.columnMAXIMUM_CARDINALITY.ReadOnly = true;
                this.columnDTD_IDENTIFIER.ReadOnly = true;
                this.columnDTD_IDENTIFIER.MaxLength = 128;
                this.columnROUTINE_BODY.ReadOnly = true;
                this.columnROUTINE_BODY.MaxLength = 30;
                this.columnROUTINE_DEFINITION.ReadOnly = true;
                this.columnROUTINE_DEFINITION.MaxLength = 4000;
                this.columnEXTERNAL_NAME.ReadOnly = true;
                this.columnEXTERNAL_NAME.MaxLength = 128;
                this.columnEXTERNAL_LANGUAGE.ReadOnly = true;
                this.columnEXTERNAL_LANGUAGE.MaxLength = 30;
                this.columnPARAMETER_STYLE.ReadOnly = true;
                this.columnPARAMETER_STYLE.MaxLength = 30;
                this.columnIS_DETERMINISTIC.ReadOnly = true;
                this.columnIS_DETERMINISTIC.MaxLength = 10;
                this.columnSQL_DATA_ACCESS.ReadOnly = true;
                this.columnSQL_DATA_ACCESS.MaxLength = 30;
                this.columnIS_NULL_CALL.ReadOnly = true;
                this.columnIS_NULL_CALL.MaxLength = 10;
                this.columnSQL_PATH.ReadOnly = true;
                this.columnSQL_PATH.MaxLength = 128;
                this.columnSCHEMA_LEVEL_ROUTINE.ReadOnly = true;
                this.columnSCHEMA_LEVEL_ROUTINE.MaxLength = 10;
                this.columnMAX_DYNAMIC_RESULT_SETS.ReadOnly = true;
                this.columnIS_USER_DEFINED_CAST.ReadOnly = true;
                this.columnIS_USER_DEFINED_CAST.MaxLength = 10;
                this.columnIS_IMPLICITLY_INVOCABLE.ReadOnly = true;
                this.columnIS_IMPLICITLY_INVOCABLE.MaxLength = 10;
                this.columnCREATED.AllowDBNull = false;
                this.columnLAST_ALTERED.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StoredProceduresRow NewStoredProceduresRow() {
                return ((StoredProceduresRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StoredProceduresRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(StoredProceduresRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StoredProceduresRowChanged != null)) {
                    this.StoredProceduresRowChanged(this, new StoredProceduresRowChangeEvent(((StoredProceduresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StoredProceduresRowChanging != null)) {
                    this.StoredProceduresRowChanging(this, new StoredProceduresRowChangeEvent(((StoredProceduresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StoredProceduresRowDeleted != null)) {
                    this.StoredProceduresRowDeleted(this, new StoredProceduresRowChangeEvent(((StoredProceduresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StoredProceduresRowDeleting != null)) {
                    this.StoredProceduresRowDeleting(this, new StoredProceduresRowChangeEvent(((StoredProceduresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveStoredProceduresRow(StoredProceduresRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                applData ds = new applData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StoredProceduresDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class QUERYSDataTable : global::System.Data.TypedTableBase<QUERYSRow> {
            
            private global::System.Data.DataColumn columnSYSTEM;
            
            private global::System.Data.DataColumn columnNAME;
            
            private global::System.Data.DataColumn columnDISCRIPTION;
            
            private global::System.Data.DataColumn columnQUERY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QUERYSDataTable() {
                this.TableName = "QUERYS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QUERYSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected QUERYSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SYSTEMColumn {
                get {
                    return this.columnSYSTEM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DISCRIPTIONColumn {
                get {
                    return this.columnDISCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QUERYColumn {
                get {
                    return this.columnQUERY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QUERYSRow this[int index] {
                get {
                    return ((QUERYSRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QUERYSRowChangeEventHandler QUERYSRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QUERYSRowChangeEventHandler QUERYSRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QUERYSRowChangeEventHandler QUERYSRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QUERYSRowChangeEventHandler QUERYSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddQUERYSRow(QUERYSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QUERYSRow AddQUERYSRow(string SYSTEM, string NAME, string DISCRIPTION, string QUERY) {
                QUERYSRow rowQUERYSRow = ((QUERYSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SYSTEM,
                        NAME,
                        DISCRIPTION,
                        QUERY};
                rowQUERYSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowQUERYSRow);
                return rowQUERYSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QUERYSRow FindByNAME(string NAME) {
                return ((QUERYSRow)(this.Rows.Find(new object[] {
                            NAME})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                QUERYSDataTable cln = ((QUERYSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new QUERYSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSYSTEM = base.Columns["SYSTEM"];
                this.columnNAME = base.Columns["NAME"];
                this.columnDISCRIPTION = base.Columns["DISCRIPTION"];
                this.columnQUERY = base.Columns["QUERY"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSYSTEM = new global::System.Data.DataColumn("SYSTEM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSYSTEM);
                this.columnNAME = new global::System.Data.DataColumn("NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.columnDISCRIPTION = new global::System.Data.DataColumn("DISCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISCRIPTION);
                this.columnQUERY = new global::System.Data.DataColumn("QUERY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUERY);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNAME}, true));
                this.columnSYSTEM.AllowDBNull = false;
                this.columnSYSTEM.MaxLength = 20;
                this.columnNAME.AllowDBNull = false;
                this.columnNAME.Unique = true;
                this.columnNAME.MaxLength = 50;
                this.columnDISCRIPTION.MaxLength = 2147483647;
                this.columnQUERY.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QUERYSRow NewQUERYSRow() {
                return ((QUERYSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new QUERYSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(QUERYSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.QUERYSRowChanged != null)) {
                    this.QUERYSRowChanged(this, new QUERYSRowChangeEvent(((QUERYSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.QUERYSRowChanging != null)) {
                    this.QUERYSRowChanging(this, new QUERYSRowChangeEvent(((QUERYSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.QUERYSRowDeleted != null)) {
                    this.QUERYSRowDeleted(this, new QUERYSRowChangeEvent(((QUERYSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.QUERYSRowDeleting != null)) {
                    this.QUERYSRowDeleting(this, new QUERYSRowChangeEvent(((QUERYSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveQUERYSRow(QUERYSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                applData ds = new applData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "QUERYSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ASSETSRow : global::System.Data.DataRow {
            
            private ASSETSDataTable tableASSETS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ASSETSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableASSETS = ((ASSETSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SYSTEMID {
                get {
                    try {
                        return ((string)(this[this.tableASSETS.SYSTEMIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SYSTEMID\' in table \'ASSETS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSETS.SYSTEMIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LOCATION {
                get {
                    try {
                        return ((string)(this[this.tableASSETS.LOCATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOCATION\' in table \'ASSETS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSETS.LOCATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ASSETNUM {
                get {
                    try {
                        return ((string)(this[this.tableASSETS.ASSETNUMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ASSETNUM\' in table \'ASSETS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSETS.ASSETNUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AssetDescription {
                get {
                    try {
                        return ((string)(this[this.tableASSETS.AssetDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssetDescription\' in table \'ASSETS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSETS.AssetDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LocationTree {
                get {
                    try {
                        return ((string)(this[this.tableASSETS.LocationTreeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocationTree\' in table \'ASSETS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSETS.LocationTreeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string controller_name {
                get {
                    try {
                        return ((string)(this[this.tableASSETS.controller_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'controller_name\' in table \'ASSETS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSETS.controller_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string controller_type {
                get {
                    try {
                        return ((string)(this[this.tableASSETS.controller_typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'controller_type\' in table \'ASSETS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSETS.controller_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int controller_id {
                get {
                    try {
                        return ((int)(this[this.tableASSETS.controller_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'controller_id\' in table \'ASSETS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSETS.controller_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSYSTEMIDNull() {
                return this.IsNull(this.tableASSETS.SYSTEMIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSYSTEMIDNull() {
                this[this.tableASSETS.SYSTEMIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLOCATIONNull() {
                return this.IsNull(this.tableASSETS.LOCATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLOCATIONNull() {
                this[this.tableASSETS.LOCATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsASSETNUMNull() {
                return this.IsNull(this.tableASSETS.ASSETNUMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetASSETNUMNull() {
                this[this.tableASSETS.ASSETNUMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAssetDescriptionNull() {
                return this.IsNull(this.tableASSETS.AssetDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAssetDescriptionNull() {
                this[this.tableASSETS.AssetDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLocationTreeNull() {
                return this.IsNull(this.tableASSETS.LocationTreeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLocationTreeNull() {
                this[this.tableASSETS.LocationTreeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscontroller_nameNull() {
                return this.IsNull(this.tableASSETS.controller_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcontroller_nameNull() {
                this[this.tableASSETS.controller_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscontroller_typeNull() {
                return this.IsNull(this.tableASSETS.controller_typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcontroller_typeNull() {
                this[this.tableASSETS.controller_typeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Iscontroller_idNull() {
                return this.IsNull(this.tableASSETS.controller_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setcontroller_idNull() {
                this[this.tableASSETS.controller_idColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StoredProceduresRow : global::System.Data.DataRow {
            
            private StoredProceduresDataTable tableStoredProcedures;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StoredProceduresRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStoredProcedures = ((StoredProceduresDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SPECIFIC_CATALOG {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.SPECIFIC_CATALOGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SPECIFIC_CATALOG\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.SPECIFIC_CATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SPECIFIC_SCHEMA {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.SPECIFIC_SCHEMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SPECIFIC_SCHEMA\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.SPECIFIC_SCHEMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SPECIFIC_NAME {
                get {
                    return ((string)(this[this.tableStoredProcedures.SPECIFIC_NAMEColumn]));
                }
                set {
                    this[this.tableStoredProcedures.SPECIFIC_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ROUTINE_CATALOG {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.ROUTINE_CATALOGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ROUTINE_CATALOG\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.ROUTINE_CATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ROUTINE_SCHEMA {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.ROUTINE_SCHEMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ROUTINE_SCHEMA\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.ROUTINE_SCHEMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ROUTINE_NAME {
                get {
                    return ((string)(this[this.tableStoredProcedures.ROUTINE_NAMEColumn]));
                }
                set {
                    this[this.tableStoredProcedures.ROUTINE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ROUTINE_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.ROUTINE_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ROUTINE_TYPE\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.ROUTINE_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MODULE_CATALOG {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.MODULE_CATALOGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MODULE_CATALOG\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.MODULE_CATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MODULE_SCHEMA {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.MODULE_SCHEMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MODULE_SCHEMA\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.MODULE_SCHEMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MODULE_NAME {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.MODULE_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MODULE_NAME\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.MODULE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UDT_CATALOG {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.UDT_CATALOGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UDT_CATALOG\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.UDT_CATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UDT_SCHEMA {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.UDT_SCHEMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UDT_SCHEMA\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.UDT_SCHEMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UDT_NAME {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.UDT_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UDT_NAME\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.UDT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DATA_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.DATA_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATA_TYPE\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.DATA_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CHARACTER_MAXIMUM_LENGTH {
                get {
                    try {
                        return ((int)(this[this.tableStoredProcedures.CHARACTER_MAXIMUM_LENGTHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHARACTER_MAXIMUM_LENGTH\' in table \'StoredProcedures\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.CHARACTER_MAXIMUM_LENGTHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CHARACTER_OCTET_LENGTH {
                get {
                    try {
                        return ((int)(this[this.tableStoredProcedures.CHARACTER_OCTET_LENGTHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHARACTER_OCTET_LENGTH\' in table \'StoredProcedures\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.CHARACTER_OCTET_LENGTHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COLLATION_CATALOG {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.COLLATION_CATALOGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLLATION_CATALOG\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.COLLATION_CATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COLLATION_SCHEMA {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.COLLATION_SCHEMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLLATION_SCHEMA\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.COLLATION_SCHEMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COLLATION_NAME {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.COLLATION_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COLLATION_NAME\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.COLLATION_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CHARACTER_SET_CATALOG {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.CHARACTER_SET_CATALOGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHARACTER_SET_CATALOG\' in table \'StoredProcedures\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.CHARACTER_SET_CATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CHARACTER_SET_SCHEMA {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.CHARACTER_SET_SCHEMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHARACTER_SET_SCHEMA\' in table \'StoredProcedures\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.CHARACTER_SET_SCHEMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CHARACTER_SET_NAME {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.CHARACTER_SET_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CHARACTER_SET_NAME\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.CHARACTER_SET_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte NUMERIC_PRECISION {
                get {
                    try {
                        return ((byte)(this[this.tableStoredProcedures.NUMERIC_PRECISIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUMERIC_PRECISION\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.NUMERIC_PRECISIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short NUMERIC_PRECISION_RADIX {
                get {
                    try {
                        return ((short)(this[this.tableStoredProcedures.NUMERIC_PRECISION_RADIXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUMERIC_PRECISION_RADIX\' in table \'StoredProcedures\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.NUMERIC_PRECISION_RADIXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NUMERIC_SCALE {
                get {
                    try {
                        return ((int)(this[this.tableStoredProcedures.NUMERIC_SCALEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUMERIC_SCALE\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.NUMERIC_SCALEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short DATETIME_PRECISION {
                get {
                    try {
                        return ((short)(this[this.tableStoredProcedures.DATETIME_PRECISIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATETIME_PRECISION\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.DATETIME_PRECISIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string INTERVAL_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.INTERVAL_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTERVAL_TYPE\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.INTERVAL_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short INTERVAL_PRECISION {
                get {
                    try {
                        return ((short)(this[this.tableStoredProcedures.INTERVAL_PRECISIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTERVAL_PRECISION\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.INTERVAL_PRECISIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TYPE_UDT_CATALOG {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.TYPE_UDT_CATALOGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TYPE_UDT_CATALOG\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.TYPE_UDT_CATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TYPE_UDT_SCHEMA {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.TYPE_UDT_SCHEMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TYPE_UDT_SCHEMA\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.TYPE_UDT_SCHEMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TYPE_UDT_NAME {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.TYPE_UDT_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TYPE_UDT_NAME\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.TYPE_UDT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SCOPE_CATALOG {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.SCOPE_CATALOGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SCOPE_CATALOG\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.SCOPE_CATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SCOPE_SCHEMA {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.SCOPE_SCHEMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SCOPE_SCHEMA\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.SCOPE_SCHEMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SCOPE_NAME {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.SCOPE_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SCOPE_NAME\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.SCOPE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long MAXIMUM_CARDINALITY {
                get {
                    try {
                        return ((long)(this[this.tableStoredProcedures.MAXIMUM_CARDINALITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAXIMUM_CARDINALITY\' in table \'StoredProcedures\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.MAXIMUM_CARDINALITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DTD_IDENTIFIER {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.DTD_IDENTIFIERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DTD_IDENTIFIER\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.DTD_IDENTIFIERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ROUTINE_BODY {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.ROUTINE_BODYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ROUTINE_BODY\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.ROUTINE_BODYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ROUTINE_DEFINITION {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.ROUTINE_DEFINITIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ROUTINE_DEFINITION\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.ROUTINE_DEFINITIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EXTERNAL_NAME {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.EXTERNAL_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXTERNAL_NAME\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.EXTERNAL_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EXTERNAL_LANGUAGE {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.EXTERNAL_LANGUAGEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXTERNAL_LANGUAGE\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.EXTERNAL_LANGUAGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PARAMETER_STYLE {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.PARAMETER_STYLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PARAMETER_STYLE\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.PARAMETER_STYLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IS_DETERMINISTIC {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.IS_DETERMINISTICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IS_DETERMINISTIC\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.IS_DETERMINISTICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SQL_DATA_ACCESS {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.SQL_DATA_ACCESSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SQL_DATA_ACCESS\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.SQL_DATA_ACCESSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IS_NULL_CALL {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.IS_NULL_CALLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IS_NULL_CALL\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.IS_NULL_CALLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SQL_PATH {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.SQL_PATHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SQL_PATH\' in table \'StoredProcedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.SQL_PATHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SCHEMA_LEVEL_ROUTINE {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.SCHEMA_LEVEL_ROUTINEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SCHEMA_LEVEL_ROUTINE\' in table \'StoredProcedures\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.SCHEMA_LEVEL_ROUTINEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short MAX_DYNAMIC_RESULT_SETS {
                get {
                    try {
                        return ((short)(this[this.tableStoredProcedures.MAX_DYNAMIC_RESULT_SETSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAX_DYNAMIC_RESULT_SETS\' in table \'StoredProcedures\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.MAX_DYNAMIC_RESULT_SETSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IS_USER_DEFINED_CAST {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.IS_USER_DEFINED_CASTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IS_USER_DEFINED_CAST\' in table \'StoredProcedures\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.IS_USER_DEFINED_CASTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IS_IMPLICITLY_INVOCABLE {
                get {
                    try {
                        return ((string)(this[this.tableStoredProcedures.IS_IMPLICITLY_INVOCABLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IS_IMPLICITLY_INVOCABLE\' in table \'StoredProcedures\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableStoredProcedures.IS_IMPLICITLY_INVOCABLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CREATED {
                get {
                    return ((global::System.DateTime)(this[this.tableStoredProcedures.CREATEDColumn]));
                }
                set {
                    this[this.tableStoredProcedures.CREATEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LAST_ALTERED {
                get {
                    return ((global::System.DateTime)(this[this.tableStoredProcedures.LAST_ALTEREDColumn]));
                }
                set {
                    this[this.tableStoredProcedures.LAST_ALTEREDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSPECIFIC_CATALOGNull() {
                return this.IsNull(this.tableStoredProcedures.SPECIFIC_CATALOGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSPECIFIC_CATALOGNull() {
                this[this.tableStoredProcedures.SPECIFIC_CATALOGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSPECIFIC_SCHEMANull() {
                return this.IsNull(this.tableStoredProcedures.SPECIFIC_SCHEMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSPECIFIC_SCHEMANull() {
                this[this.tableStoredProcedures.SPECIFIC_SCHEMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsROUTINE_CATALOGNull() {
                return this.IsNull(this.tableStoredProcedures.ROUTINE_CATALOGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetROUTINE_CATALOGNull() {
                this[this.tableStoredProcedures.ROUTINE_CATALOGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsROUTINE_SCHEMANull() {
                return this.IsNull(this.tableStoredProcedures.ROUTINE_SCHEMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetROUTINE_SCHEMANull() {
                this[this.tableStoredProcedures.ROUTINE_SCHEMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsROUTINE_TYPENull() {
                return this.IsNull(this.tableStoredProcedures.ROUTINE_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetROUTINE_TYPENull() {
                this[this.tableStoredProcedures.ROUTINE_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMODULE_CATALOGNull() {
                return this.IsNull(this.tableStoredProcedures.MODULE_CATALOGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMODULE_CATALOGNull() {
                this[this.tableStoredProcedures.MODULE_CATALOGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMODULE_SCHEMANull() {
                return this.IsNull(this.tableStoredProcedures.MODULE_SCHEMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMODULE_SCHEMANull() {
                this[this.tableStoredProcedures.MODULE_SCHEMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMODULE_NAMENull() {
                return this.IsNull(this.tableStoredProcedures.MODULE_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMODULE_NAMENull() {
                this[this.tableStoredProcedures.MODULE_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUDT_CATALOGNull() {
                return this.IsNull(this.tableStoredProcedures.UDT_CATALOGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUDT_CATALOGNull() {
                this[this.tableStoredProcedures.UDT_CATALOGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUDT_SCHEMANull() {
                return this.IsNull(this.tableStoredProcedures.UDT_SCHEMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUDT_SCHEMANull() {
                this[this.tableStoredProcedures.UDT_SCHEMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUDT_NAMENull() {
                return this.IsNull(this.tableStoredProcedures.UDT_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUDT_NAMENull() {
                this[this.tableStoredProcedures.UDT_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDATA_TYPENull() {
                return this.IsNull(this.tableStoredProcedures.DATA_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDATA_TYPENull() {
                this[this.tableStoredProcedures.DATA_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCHARACTER_MAXIMUM_LENGTHNull() {
                return this.IsNull(this.tableStoredProcedures.CHARACTER_MAXIMUM_LENGTHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCHARACTER_MAXIMUM_LENGTHNull() {
                this[this.tableStoredProcedures.CHARACTER_MAXIMUM_LENGTHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCHARACTER_OCTET_LENGTHNull() {
                return this.IsNull(this.tableStoredProcedures.CHARACTER_OCTET_LENGTHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCHARACTER_OCTET_LENGTHNull() {
                this[this.tableStoredProcedures.CHARACTER_OCTET_LENGTHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOLLATION_CATALOGNull() {
                return this.IsNull(this.tableStoredProcedures.COLLATION_CATALOGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOLLATION_CATALOGNull() {
                this[this.tableStoredProcedures.COLLATION_CATALOGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOLLATION_SCHEMANull() {
                return this.IsNull(this.tableStoredProcedures.COLLATION_SCHEMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOLLATION_SCHEMANull() {
                this[this.tableStoredProcedures.COLLATION_SCHEMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOLLATION_NAMENull() {
                return this.IsNull(this.tableStoredProcedures.COLLATION_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOLLATION_NAMENull() {
                this[this.tableStoredProcedures.COLLATION_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCHARACTER_SET_CATALOGNull() {
                return this.IsNull(this.tableStoredProcedures.CHARACTER_SET_CATALOGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCHARACTER_SET_CATALOGNull() {
                this[this.tableStoredProcedures.CHARACTER_SET_CATALOGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCHARACTER_SET_SCHEMANull() {
                return this.IsNull(this.tableStoredProcedures.CHARACTER_SET_SCHEMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCHARACTER_SET_SCHEMANull() {
                this[this.tableStoredProcedures.CHARACTER_SET_SCHEMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCHARACTER_SET_NAMENull() {
                return this.IsNull(this.tableStoredProcedures.CHARACTER_SET_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCHARACTER_SET_NAMENull() {
                this[this.tableStoredProcedures.CHARACTER_SET_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNUMERIC_PRECISIONNull() {
                return this.IsNull(this.tableStoredProcedures.NUMERIC_PRECISIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNUMERIC_PRECISIONNull() {
                this[this.tableStoredProcedures.NUMERIC_PRECISIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNUMERIC_PRECISION_RADIXNull() {
                return this.IsNull(this.tableStoredProcedures.NUMERIC_PRECISION_RADIXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNUMERIC_PRECISION_RADIXNull() {
                this[this.tableStoredProcedures.NUMERIC_PRECISION_RADIXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNUMERIC_SCALENull() {
                return this.IsNull(this.tableStoredProcedures.NUMERIC_SCALEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNUMERIC_SCALENull() {
                this[this.tableStoredProcedures.NUMERIC_SCALEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDATETIME_PRECISIONNull() {
                return this.IsNull(this.tableStoredProcedures.DATETIME_PRECISIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDATETIME_PRECISIONNull() {
                this[this.tableStoredProcedures.DATETIME_PRECISIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINTERVAL_TYPENull() {
                return this.IsNull(this.tableStoredProcedures.INTERVAL_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINTERVAL_TYPENull() {
                this[this.tableStoredProcedures.INTERVAL_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINTERVAL_PRECISIONNull() {
                return this.IsNull(this.tableStoredProcedures.INTERVAL_PRECISIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINTERVAL_PRECISIONNull() {
                this[this.tableStoredProcedures.INTERVAL_PRECISIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTYPE_UDT_CATALOGNull() {
                return this.IsNull(this.tableStoredProcedures.TYPE_UDT_CATALOGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTYPE_UDT_CATALOGNull() {
                this[this.tableStoredProcedures.TYPE_UDT_CATALOGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTYPE_UDT_SCHEMANull() {
                return this.IsNull(this.tableStoredProcedures.TYPE_UDT_SCHEMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTYPE_UDT_SCHEMANull() {
                this[this.tableStoredProcedures.TYPE_UDT_SCHEMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTYPE_UDT_NAMENull() {
                return this.IsNull(this.tableStoredProcedures.TYPE_UDT_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTYPE_UDT_NAMENull() {
                this[this.tableStoredProcedures.TYPE_UDT_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSCOPE_CATALOGNull() {
                return this.IsNull(this.tableStoredProcedures.SCOPE_CATALOGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSCOPE_CATALOGNull() {
                this[this.tableStoredProcedures.SCOPE_CATALOGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSCOPE_SCHEMANull() {
                return this.IsNull(this.tableStoredProcedures.SCOPE_SCHEMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSCOPE_SCHEMANull() {
                this[this.tableStoredProcedures.SCOPE_SCHEMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSCOPE_NAMENull() {
                return this.IsNull(this.tableStoredProcedures.SCOPE_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSCOPE_NAMENull() {
                this[this.tableStoredProcedures.SCOPE_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMAXIMUM_CARDINALITYNull() {
                return this.IsNull(this.tableStoredProcedures.MAXIMUM_CARDINALITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMAXIMUM_CARDINALITYNull() {
                this[this.tableStoredProcedures.MAXIMUM_CARDINALITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDTD_IDENTIFIERNull() {
                return this.IsNull(this.tableStoredProcedures.DTD_IDENTIFIERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDTD_IDENTIFIERNull() {
                this[this.tableStoredProcedures.DTD_IDENTIFIERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsROUTINE_BODYNull() {
                return this.IsNull(this.tableStoredProcedures.ROUTINE_BODYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetROUTINE_BODYNull() {
                this[this.tableStoredProcedures.ROUTINE_BODYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsROUTINE_DEFINITIONNull() {
                return this.IsNull(this.tableStoredProcedures.ROUTINE_DEFINITIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetROUTINE_DEFINITIONNull() {
                this[this.tableStoredProcedures.ROUTINE_DEFINITIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEXTERNAL_NAMENull() {
                return this.IsNull(this.tableStoredProcedures.EXTERNAL_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEXTERNAL_NAMENull() {
                this[this.tableStoredProcedures.EXTERNAL_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEXTERNAL_LANGUAGENull() {
                return this.IsNull(this.tableStoredProcedures.EXTERNAL_LANGUAGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEXTERNAL_LANGUAGENull() {
                this[this.tableStoredProcedures.EXTERNAL_LANGUAGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPARAMETER_STYLENull() {
                return this.IsNull(this.tableStoredProcedures.PARAMETER_STYLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPARAMETER_STYLENull() {
                this[this.tableStoredProcedures.PARAMETER_STYLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIS_DETERMINISTICNull() {
                return this.IsNull(this.tableStoredProcedures.IS_DETERMINISTICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIS_DETERMINISTICNull() {
                this[this.tableStoredProcedures.IS_DETERMINISTICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSQL_DATA_ACCESSNull() {
                return this.IsNull(this.tableStoredProcedures.SQL_DATA_ACCESSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSQL_DATA_ACCESSNull() {
                this[this.tableStoredProcedures.SQL_DATA_ACCESSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIS_NULL_CALLNull() {
                return this.IsNull(this.tableStoredProcedures.IS_NULL_CALLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIS_NULL_CALLNull() {
                this[this.tableStoredProcedures.IS_NULL_CALLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSQL_PATHNull() {
                return this.IsNull(this.tableStoredProcedures.SQL_PATHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSQL_PATHNull() {
                this[this.tableStoredProcedures.SQL_PATHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSCHEMA_LEVEL_ROUTINENull() {
                return this.IsNull(this.tableStoredProcedures.SCHEMA_LEVEL_ROUTINEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSCHEMA_LEVEL_ROUTINENull() {
                this[this.tableStoredProcedures.SCHEMA_LEVEL_ROUTINEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMAX_DYNAMIC_RESULT_SETSNull() {
                return this.IsNull(this.tableStoredProcedures.MAX_DYNAMIC_RESULT_SETSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMAX_DYNAMIC_RESULT_SETSNull() {
                this[this.tableStoredProcedures.MAX_DYNAMIC_RESULT_SETSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIS_USER_DEFINED_CASTNull() {
                return this.IsNull(this.tableStoredProcedures.IS_USER_DEFINED_CASTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIS_USER_DEFINED_CASTNull() {
                this[this.tableStoredProcedures.IS_USER_DEFINED_CASTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIS_IMPLICITLY_INVOCABLENull() {
                return this.IsNull(this.tableStoredProcedures.IS_IMPLICITLY_INVOCABLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIS_IMPLICITLY_INVOCABLENull() {
                this[this.tableStoredProcedures.IS_IMPLICITLY_INVOCABLEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class QUERYSRow : global::System.Data.DataRow {
            
            private QUERYSDataTable tableQUERYS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QUERYSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableQUERYS = ((QUERYSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SYSTEM {
                get {
                    return ((string)(this[this.tableQUERYS.SYSTEMColumn]));
                }
                set {
                    this[this.tableQUERYS.SYSTEMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NAME {
                get {
                    return ((string)(this[this.tableQUERYS.NAMEColumn]));
                }
                set {
                    this[this.tableQUERYS.NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DISCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableQUERYS.DISCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DISCRIPTION\' in table \'QUERYS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQUERYS.DISCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string QUERY {
                get {
                    try {
                        return ((string)(this[this.tableQUERYS.QUERYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QUERY\' in table \'QUERYS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQUERYS.QUERYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDISCRIPTIONNull() {
                return this.IsNull(this.tableQUERYS.DISCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDISCRIPTIONNull() {
                this[this.tableQUERYS.DISCRIPTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQUERYNull() {
                return this.IsNull(this.tableQUERYS.QUERYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQUERYNull() {
                this[this.tableQUERYS.QUERYColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ASSETSRowChangeEvent : global::System.EventArgs {
            
            private ASSETSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ASSETSRowChangeEvent(ASSETSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ASSETSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class StoredProceduresRowChangeEvent : global::System.EventArgs {
            
            private StoredProceduresRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StoredProceduresRowChangeEvent(StoredProceduresRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StoredProceduresRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class QUERYSRowChangeEvent : global::System.EventArgs {
            
            private QUERYSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QUERYSRowChangeEvent(QUERYSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QUERYSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace ExcelAddInEquipmentDatabase.applDataTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ASSETSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ASSETSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ASSETS";
            tableMapping.ColumnMappings.Add("SYSTEMID", "SYSTEMID");
            tableMapping.ColumnMappings.Add("LOCATION", "LOCATION");
            tableMapping.ColumnMappings.Add("ASSETNUM", "ASSETNUM");
            tableMapping.ColumnMappings.Add("AssetDescription", "AssetDescription");
            tableMapping.ColumnMappings.Add("LocationTree", "LocationTree");
            tableMapping.ColumnMappings.Add("controller_name", "controller_name");
            tableMapping.ColumnMappings.Add("controller_type", "controller_type");
            tableMapping.ColumnMappings.Add("controller_id", "controller_id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Volvo].[ASSETS] ([SYSTEMID], [LOCATION], [ASSETNUM], [AssetDescription], [LocationTree], [controller_name], [controller_type], [controller_id]) VALUES (@SYSTEMID, @LOCATION, @ASSETNUM, @AssetDescription, @LocationTree, @controller_name, @controller_type, @controller_id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SYSTEMID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SYSTEMID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOCATION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOCATION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ASSETNUM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASSETNUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AssetDescription", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AssetDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LocationTree", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationTree", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@controller_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "controller_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@controller_type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "controller_type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@controller_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "controller_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ExcelAddInEquipmentDatabase.Properties.Settings.Default.GADATAConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT SYSTEMID, LOCATION, ASSETNUM, AssetDescription, LocationTree, controller_n" +
                "ame, controller_type, controller_id FROM Volvo.ASSETS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(applData.ASSETSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual applData.ASSETSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            applData.ASSETSDataTable dataTable = new applData.ASSETSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(applData.ASSETSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(applData dataSet) {
            return this.Adapter.Update(dataSet, "ASSETS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string SYSTEMID, string LOCATION, string ASSETNUM, string AssetDescription, string LocationTree, string controller_name, string controller_type, global::System.Nullable<int> controller_id) {
            if ((SYSTEMID == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SYSTEMID));
            }
            if ((LOCATION == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(LOCATION));
            }
            if ((ASSETNUM == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ASSETNUM));
            }
            if ((AssetDescription == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(AssetDescription));
            }
            if ((LocationTree == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(LocationTree));
            }
            if ((controller_name == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(controller_name));
            }
            if ((controller_type == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(controller_type));
            }
            if ((controller_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(controller_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class StoredProceduresTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public StoredProceduresTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "StoredProcedures";
            tableMapping.ColumnMappings.Add("SPECIFIC_CATALOG", "SPECIFIC_CATALOG");
            tableMapping.ColumnMappings.Add("SPECIFIC_SCHEMA", "SPECIFIC_SCHEMA");
            tableMapping.ColumnMappings.Add("SPECIFIC_NAME", "SPECIFIC_NAME");
            tableMapping.ColumnMappings.Add("ROUTINE_CATALOG", "ROUTINE_CATALOG");
            tableMapping.ColumnMappings.Add("ROUTINE_SCHEMA", "ROUTINE_SCHEMA");
            tableMapping.ColumnMappings.Add("ROUTINE_NAME", "ROUTINE_NAME");
            tableMapping.ColumnMappings.Add("ROUTINE_TYPE", "ROUTINE_TYPE");
            tableMapping.ColumnMappings.Add("MODULE_CATALOG", "MODULE_CATALOG");
            tableMapping.ColumnMappings.Add("MODULE_SCHEMA", "MODULE_SCHEMA");
            tableMapping.ColumnMappings.Add("MODULE_NAME", "MODULE_NAME");
            tableMapping.ColumnMappings.Add("UDT_CATALOG", "UDT_CATALOG");
            tableMapping.ColumnMappings.Add("UDT_SCHEMA", "UDT_SCHEMA");
            tableMapping.ColumnMappings.Add("UDT_NAME", "UDT_NAME");
            tableMapping.ColumnMappings.Add("DATA_TYPE", "DATA_TYPE");
            tableMapping.ColumnMappings.Add("CHARACTER_MAXIMUM_LENGTH", "CHARACTER_MAXIMUM_LENGTH");
            tableMapping.ColumnMappings.Add("CHARACTER_OCTET_LENGTH", "CHARACTER_OCTET_LENGTH");
            tableMapping.ColumnMappings.Add("COLLATION_CATALOG", "COLLATION_CATALOG");
            tableMapping.ColumnMappings.Add("COLLATION_SCHEMA", "COLLATION_SCHEMA");
            tableMapping.ColumnMappings.Add("COLLATION_NAME", "COLLATION_NAME");
            tableMapping.ColumnMappings.Add("CHARACTER_SET_CATALOG", "CHARACTER_SET_CATALOG");
            tableMapping.ColumnMappings.Add("CHARACTER_SET_SCHEMA", "CHARACTER_SET_SCHEMA");
            tableMapping.ColumnMappings.Add("CHARACTER_SET_NAME", "CHARACTER_SET_NAME");
            tableMapping.ColumnMappings.Add("NUMERIC_PRECISION", "NUMERIC_PRECISION");
            tableMapping.ColumnMappings.Add("NUMERIC_PRECISION_RADIX", "NUMERIC_PRECISION_RADIX");
            tableMapping.ColumnMappings.Add("NUMERIC_SCALE", "NUMERIC_SCALE");
            tableMapping.ColumnMappings.Add("DATETIME_PRECISION", "DATETIME_PRECISION");
            tableMapping.ColumnMappings.Add("INTERVAL_TYPE", "INTERVAL_TYPE");
            tableMapping.ColumnMappings.Add("INTERVAL_PRECISION", "INTERVAL_PRECISION");
            tableMapping.ColumnMappings.Add("TYPE_UDT_CATALOG", "TYPE_UDT_CATALOG");
            tableMapping.ColumnMappings.Add("TYPE_UDT_SCHEMA", "TYPE_UDT_SCHEMA");
            tableMapping.ColumnMappings.Add("TYPE_UDT_NAME", "TYPE_UDT_NAME");
            tableMapping.ColumnMappings.Add("SCOPE_CATALOG", "SCOPE_CATALOG");
            tableMapping.ColumnMappings.Add("SCOPE_SCHEMA", "SCOPE_SCHEMA");
            tableMapping.ColumnMappings.Add("SCOPE_NAME", "SCOPE_NAME");
            tableMapping.ColumnMappings.Add("MAXIMUM_CARDINALITY", "MAXIMUM_CARDINALITY");
            tableMapping.ColumnMappings.Add("DTD_IDENTIFIER", "DTD_IDENTIFIER");
            tableMapping.ColumnMappings.Add("ROUTINE_BODY", "ROUTINE_BODY");
            tableMapping.ColumnMappings.Add("ROUTINE_DEFINITION", "ROUTINE_DEFINITION");
            tableMapping.ColumnMappings.Add("EXTERNAL_NAME", "EXTERNAL_NAME");
            tableMapping.ColumnMappings.Add("EXTERNAL_LANGUAGE", "EXTERNAL_LANGUAGE");
            tableMapping.ColumnMappings.Add("PARAMETER_STYLE", "PARAMETER_STYLE");
            tableMapping.ColumnMappings.Add("IS_DETERMINISTIC", "IS_DETERMINISTIC");
            tableMapping.ColumnMappings.Add("SQL_DATA_ACCESS", "SQL_DATA_ACCESS");
            tableMapping.ColumnMappings.Add("IS_NULL_CALL", "IS_NULL_CALL");
            tableMapping.ColumnMappings.Add("SQL_PATH", "SQL_PATH");
            tableMapping.ColumnMappings.Add("SCHEMA_LEVEL_ROUTINE", "SCHEMA_LEVEL_ROUTINE");
            tableMapping.ColumnMappings.Add("MAX_DYNAMIC_RESULT_SETS", "MAX_DYNAMIC_RESULT_SETS");
            tableMapping.ColumnMappings.Add("IS_USER_DEFINED_CAST", "IS_USER_DEFINED_CAST");
            tableMapping.ColumnMappings.Add("IS_IMPLICITLY_INVOCABLE", "IS_IMPLICITLY_INVOCABLE");
            tableMapping.ColumnMappings.Add("CREATED", "CREATED");
            tableMapping.ColumnMappings.Add("LAST_ALTERED", "LAST_ALTERED");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ExcelAddInEquipmentDatabase.Properties.Settings.Default.GADATAConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "select * from GADATA.information_schema.routines where routine_type = \'PROCEDURE\'" +
                " AND SPECIFIC_SCHEMA = \'Volvo\'";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(applData.StoredProceduresDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual applData.StoredProceduresDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            applData.StoredProceduresDataTable dataTable = new applData.StoredProceduresDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QUERYSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public QUERYSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "QUERYS";
            tableMapping.ColumnMappings.Add("SYSTEM", "SYSTEM");
            tableMapping.ColumnMappings.Add("NAME", "NAME");
            tableMapping.ColumnMappings.Add("DISCRIPTION", "DISCRIPTION");
            tableMapping.ColumnMappings.Add("QUERY", "QUERY");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Volvo].[QUERYS] WHERE (([SYSTEM] = @Original_SYSTEM) AND ([NAME] = @" +
                "Original_NAME))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SYSTEM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SYSTEM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [Volvo].[QUERYS] ([SYSTEM], [NAME], [DISCRIPTION], [QUERY]) VALUES (@" +
                "SYSTEM, @NAME, @DISCRIPTION, @QUERY);\r\nSELECT SYSTEM, NAME, DISCRIPTION, QUERY F" +
                "ROM Volvo.QUERYS WHERE (NAME = @NAME)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SYSTEM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SYSTEM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DISCRIPTION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DISCRIPTION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QUERY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUERY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Volvo].[QUERYS] SET [SYSTEM] = @SYSTEM, [NAME] = @NAME, [DISCRIPTION] = @DISCRIPTION, [QUERY] = @QUERY WHERE (([SYSTEM] = @Original_SYSTEM) AND ([NAME] = @Original_NAME));
SELECT SYSTEM, NAME, DISCRIPTION, QUERY FROM Volvo.QUERYS WHERE (NAME = @NAME)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SYSTEM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SYSTEM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DISCRIPTION", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DISCRIPTION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QUERY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QUERY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SYSTEM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SYSTEM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ExcelAddInEquipmentDatabase.Properties.Settings.Default.GADATAConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT SYSTEM, NAME, DISCRIPTION, QUERY FROM Volvo.QUERYS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(applData.QUERYSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual applData.QUERYSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            applData.QUERYSDataTable dataTable = new applData.QUERYSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(applData.QUERYSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(applData dataSet) {
            return this.Adapter.Update(dataSet, "QUERYS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_SYSTEM, string Original_NAME) {
            if ((Original_SYSTEM == null)) {
                throw new global::System.ArgumentNullException("Original_SYSTEM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_SYSTEM));
            }
            if ((Original_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_NAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string SYSTEM, string NAME, string DISCRIPTION, string QUERY) {
            if ((SYSTEM == null)) {
                throw new global::System.ArgumentNullException("SYSTEM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SYSTEM));
            }
            if ((NAME == null)) {
                throw new global::System.ArgumentNullException("NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(NAME));
            }
            if ((DISCRIPTION == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DISCRIPTION));
            }
            if ((QUERY == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(QUERY));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SYSTEM, string NAME, string DISCRIPTION, string QUERY, string Original_SYSTEM, string Original_NAME) {
            if ((SYSTEM == null)) {
                throw new global::System.ArgumentNullException("SYSTEM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SYSTEM));
            }
            if ((NAME == null)) {
                throw new global::System.ArgumentNullException("NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(NAME));
            }
            if ((DISCRIPTION == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DISCRIPTION));
            }
            if ((QUERY == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(QUERY));
            }
            if ((Original_SYSTEM == null)) {
                throw new global::System.ArgumentNullException("Original_SYSTEM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_SYSTEM));
            }
            if ((Original_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_NAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SYSTEM, string DISCRIPTION, string QUERY, string Original_SYSTEM, string Original_NAME) {
            return this.Update(SYSTEM, Original_NAME, DISCRIPTION, QUERY, Original_SYSTEM, Original_NAME);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private ASSETSTableAdapter _aSSETSTableAdapter;
        
        private QUERYSTableAdapter _qUERYSTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ASSETSTableAdapter ASSETSTableAdapter {
            get {
                return this._aSSETSTableAdapter;
            }
            set {
                this._aSSETSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public QUERYSTableAdapter QUERYSTableAdapter {
            get {
                return this._qUERYSTableAdapter;
            }
            set {
                this._qUERYSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._aSSETSTableAdapter != null) 
                            && (this._aSSETSTableAdapter.Connection != null))) {
                    return this._aSSETSTableAdapter.Connection;
                }
                if (((this._qUERYSTableAdapter != null) 
                            && (this._qUERYSTableAdapter.Connection != null))) {
                    return this._qUERYSTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._aSSETSTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._qUERYSTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(applData dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._aSSETSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ASSETS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._aSSETSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._qUERYSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.QUERYS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._qUERYSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(applData dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._aSSETSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ASSETS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._aSSETSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._qUERYSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.QUERYS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._qUERYSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(applData dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._qUERYSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.QUERYS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._qUERYSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._aSSETSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ASSETS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._aSSETSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(applData dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._aSSETSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._aSSETSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._qUERYSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._qUERYSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._aSSETSTableAdapter != null)) {
                    revertConnections.Add(this._aSSETSTableAdapter, this._aSSETSTableAdapter.Connection);
                    this._aSSETSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._aSSETSTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._aSSETSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._aSSETSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._aSSETSTableAdapter.Adapter);
                    }
                }
                if ((this._qUERYSTableAdapter != null)) {
                    revertConnections.Add(this._qUERYSTableAdapter, this._qUERYSTableAdapter.Connection);
                    this._qUERYSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._qUERYSTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._qUERYSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._qUERYSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._qUERYSTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._aSSETSTableAdapter != null)) {
                    this._aSSETSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._aSSETSTableAdapter]));
                    this._aSSETSTableAdapter.Transaction = null;
                }
                if ((this._qUERYSTableAdapter != null)) {
                    this._qUERYSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._qUERYSTableAdapter]));
                    this._qUERYSTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591